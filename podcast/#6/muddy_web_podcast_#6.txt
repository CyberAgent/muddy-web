マディウェブポッドキャストは、マディの意味が泥であるように ウェブフロントエンドの開発現場における泥臭い話などから学びを得ることを目的とし、
実際に明日から使えるかもしれないウェブフロントエンド知識や技術を 参加者の皆様と共有し合うことを通して、フロントエンド海外の役に立てるように思いを込めて発信しています。
はい、それではマディウェブポッドキャストを始めていきたいと思います。
本日はですね、フィグマからコンポーネントの自動生成についてということでお話ししていきたいと思います。
本日ゲストにお越しいただいております黒沢拓さんこと黒沢拓真さんです。
どうもよろしくお願いします。
よろしくお願いします。
すいません、軽く聞いている方に自己紹介の方よろしくお願いします。いいですか?
はい、黒沢拓真と申します。
普段はAI事業本部というところで所属していまして、
フロントエンドの開発だったりバックエンドの開発だったりというのを担当しているエンジニアになります。
今回MOKUMOKUというイベントでフィグマからビューのコードを自動生成というところで検証させていただいた内容を今日お話しできたらなと思いますのでよろしくお願いします。
はい、ありがとうございます。
入社はバックエンドで入られたんですよね。
それまで入る前はフロントエンドで希望していたって聞いたんですけども。
そうですそうです。
就活してた時代はフロントエンドエンジニアとして就活してたんですけど、
CAのテック道場というインターンで内定が決まったので、サーバーサイドエンジニアとして入社はしたって感じですね。
なるほど。
じゃあもうフロントもバックエンドも両方二刀流ということで。
そうですね、二刀流。
バックエンドに主軸は置いてるんですけど、もともといったプロダクトの方でフロントエンドをメインでやらせてもらってたっていうのもあるので、ちょっと二刀流でやらせていただいてます。
すみません、改めて今回フィグマからコンポーネントを自動で生成するお話だったんですけども、先ほどのMOKUMOKU、これ社内イベントでしたよね。
そうです。
というのはどんなものだったかちょっと教えていただいてもよろしいでしょうか。
MOKUMOKU、これPOCって呼ばれる、いわゆる概念検証って呼ばれるものですね。
POCをするとかよく言いますけど、あれをエンジニアとクリエイター向けにPOCをしつつ、MOKを作って世の中にどのくらい考えてるアイデアみたいなものが実装可能なのかみたいなところをコンテキストで競い合おうみたいなもので立ち上がったイベントになってます。
全2回開催されてまして、今回フィグマの検証したのは第2回の時に発表した内容になります。
なるほど、実はこれ僕も1回目に参加してて、2回目に出てないんですけど、結構あれですよね、3日間、何日間でしたっけ、集中して開発やって、8日間みたいな感じですよね。
そうです。結構ハッカスに近いような形で、1人のチームとかもあったりするんですけど、2週間くらいでMOKを作ってもらって発表するみたいな感じですね。
その中でやったのがフィグマからPOD自動生成。
そうです。
どうしてこれの課題を選んだんですか?
もともとプロダクトでフィグマを使ってたのと、あとはVueを使ってて、CSSを各このエンジニア、フロントエンドエンジニアっていうのがメインで貼れる人が2人ぐらいしか当てられてなくて、
基本バックエンドエンジニアとかが頑張ってフルスタックに開発していくみたいなチーム組織だったんで、
できればデザインをフィグマで作ったらコンポーネントができるみたいな世界線ができれば、メインでフロントに貼る人が少なかったとしても結構回るんじゃないかなって思ってて、
そこでフィグマからPOD自動生成ってどのくらい実現可能性あるんだろうかみたいなのを検証すれば、ちょうどプロダクトでやりたいことにも下ろせるなと思ってやった感じですね。
なるほどですね。じゃあ結構事業って普段の仕事のところの環境からそういう課題を見つけて始めたということなんですね。
フィグマからこのPOD自動生成って話題になってますけども、実際にやったこととして具体的に言うとどんなことをやられたんですか?
実際にやったことっていうのはサービスを3つ取り上げまして、そこから生成されるビューのコードがどんなものかっていうのを実際に触ってみたみたいな感じになるんですけど、
具体的には今回取り上げたのがOverlayっていうツールと、あとテレポートHQか、とAnimaっていうのを取り上げたんですけど、
それぞれはフィグマに特化するツールってことですか?
そうです。フィグマプラグインに該当するのかなと思います。
例えばOverlayだとどんなプラグインなんでしょうか?
オーバーレイとかだと、いわゆるフィグマプラグインをフィグマにインストールしてもらって、作ったコンポーネントをオーバーレイにエクスポートするみたいなオプションがあるんですけど、
そうするとオーバーレイの提供しているUI上でコンポーネントの編集ができるのと、プラスコードのプレビューおよびエクスポートみたいなのが画面上でできるみたいな。
なるほど。フィグマのデザインからオーバーレイのプラグインにインポートさせてあげると、自動で変換させてくれる?
そうです。
他の2つのツールって何でしたっけ?
テレポートHQとAnimaですね。
どっちもオーバーレイと同じように、一旦各プラットフォームにフィグマからエクスポートしてきて、そこから自動生成をしてくれるみたいなサービスになってますね。
なるほど。その3つを検証したってことですね。
そうです。
どんなことを検証したんですか?
実際にフィグマで簡単なデザインをコンポーネント、カードビルなんですけど、それを作って、同じコンポーネントをそれぞれのプラットフォームにエクスポートしたときに、どういう感じでコード生成されるのかっていうのを検証したのと、
あとは完璧にコード生成してもらうっていうよりも、もともとプロダクトに入れたかったものとしては、デザインからある程度コード生成されて、ちょっとエンジニアが書き加えるぐらいのクオリティであればいいなと思ってたんで、それがどのくらいやりやすいのかっていうのが検証したかったので、
プラットフォーム上でどういう感じで変えれば上手い感じにコードを生成してくれるのかっていうところまで見た感じですね。
なるほど。
結構エンジニアのアシスト的な観点から検証を見ていたって形なんですね。
そうです。
実際にカードのデザインのコンポーネントを注入したときに、ツールごとにアウトプットって変わってくるんですか?
だいぶ違いましたね。
どんな違いでしたか?
結構エンジニアが書く流度で、そのコンポーネントを分けてくれるとこまでやってくれるプラットフォームもあれば、
HTMLベタ書きみたいな感じで、もうコンポーネントか考えません。もうとにかくHTMLで生成しますみたいな思想のプラットフォームもあるので、結構そこで大きく分かれるかなと思ってまして、
前者の方が結構プロダクトレベルに近いコード生成だなと思ってたので、個人的にはHTMLでベタ書きってよりはコンポーネントにちゃんと分けてくれるっていう方が好きだなと思いましたね。
なるほど。
結構このエンジニアから見て、しっかり実装を考慮したアウトプットか、HTMLのベタ書きだとLPとかに結構使えそうですね。
そうですね。今回検証してみて思ったのは、やっぱりまだ発展途上の技術だなっていうのは3つともに言えることだなと思ってて、
どうしたかというと、さっきコンポーネントに分けてくれるって言ったんですけど、そのコードベースもプラットフォームに依存するんですよ。
そのコンポーネント分けました、ディレクトリ構成こうなりますみたいなところまで全部プラグイン側が作っちゃうので、そのコードベースに合わせられるプロジェクトだといいと思うんですけど、
それに合わせられなくて、ちゃんとアトミックデザインをやりたいとか、フィーチャーフラグバッターやりたいとかってなった時に、ちょっとそこの連携が弱いというか、
ちゃんと自分たちで部品を改めて配置し直すみたいなことが必要になってくるっていうのがあったりだとか、
あとコンポーネントフィグマのどんどんアップデートされてってるんですけど、そのコンポーネント化していくみたいなフィグマの機能があるんですけど、
そこの機能に追従できてない感がどのツールもあって、やっぱりそこのフィグマ自体がまだ成長段階でもあるっていうところで、一緒に成長していくフェーズなのかなっていうようなのを感じますね。
結構出力される成果物のシステムデザインみたいなところはもうプラットフォームに合わせるか、自分たちで変えていく必要がある感じなんですね。
結構まだまだ使いづらいところはありそうですね。
だいぶプロダクションレベルでは使いづらいなって思うので、それこそLPみたいにデザイナーが作った通り画面に表示してほしいみたいなもので、
かつエンジニアがそんなにメンテしたくないみたいな用途の場合はかなり使える、すでにもう使えるんじゃないかなと思うレベルではありつつも、
ちょっとプロダクションでちゃんとコンポーネント設計してやっていきたいみたいなプロダクトだときついかなって感じですね。
なるほど。
なんかあれですね、ブログとかLPとか生成するとき結構デザインがあってエンジニアにこれを渡してこれを開発してくださいっていうのが多いかと思うんですけども、
そういったところにエンジニアを返さないで勝手に生成させてそれを発信するっていうような使い方では使えそうな感じなんですよね。
もうすでにかなり高いレベルで使えるんじゃないかなと思ってます。
レスポンシブとかはちゃんと対応してくれるコードになっているので、
あ、そうなんですね。
CSS自体は結構エンジニアが書いたものと同じぐらいのレベル感でアウトプットされるので、
コンポーネントとか考えなくてベタの1ページとかで考えたときにはかなりクオリティの高いものが出来上がってくる印象ですね。
面白いですね、そこまでやってくれるんだ。
気になったんですけど、よくあるCSSの当て方とかクラス名ってあるじゃないですか。
あれってすごい前に触ったときはID-なんとかいけてなかったんですよね。
今回触ってみてその辺とかってどんな感じでしたか?
そこは結構フィグマの作り方に依存しますね。
コンポーネントの分け方とかも結構フィグマに依存するところがあるんですけど、
フィグマのバリアントっていうものかな、
そういうのでちゃんと設定値で名前をコンポーネントにつけたりとか、
CSSのクラス名とかをちゃんと定義するっていうのができてれば、
ある程度エンジニアが書いたレベルで基本とかルールに則ったコードを生成してくれるようなイメージでしたね。
なので逆に言うとフィグマとか使うデザイナーの方になると思うんですけど、
そういう方にデザイン作る段階でそういうのを求めることにはなるので、
ちょっとデザイナーのレベルを上げなきゃいけないというか、
エンジニアの知識もちょっと吸収してもらわないと。
そうです。ちゃんとフィグマで命名してもらうみたいなところを徹底しないとちょっときついかもしれないですね。
CSSの命名とか。
なるほど。じゃあフィギュアのデザインのところにメタデータを入れるようなフォームがあって、
そこに入れていくって形になっている。
そうです。
確かにそういうの、そうですよね。デザイナーさんももはやそれができたらコードを書けるんじゃないかぐらい。
確かに。
確かにそうですよね。その辺の命名とかってしっかりしないとデザインとか崩れたりとかする可能性とかありますもんね。
全然あると思いますね。
特に大きいコードベースになってくるとその辺ちゃんと設計しないと破綻すると思う。
確かに。今回それはデザインルールみたいなのをしっかり定義すればそこの課題は解決できそうな印象でしたか?
ちょっと別文脈になるんですけど、このポックモックでは検証しなかったものの前回プロダクトで導入したものとして
デザイントークンっていうものがあるんですね。そっちはもう結構成熟期に入ってまして
フォームの自動生成をするわけではなく、カラーコードだったりとかマージンの大きさみたいなものをちゃんと企画化するというか
自分たちで一覧化してディクショナリーにしてあげることでデザイン全体の統一感を保つみたいなものがあるんですけど
そこのルールみたいなものをフィグマ上で作ってあげれば自動でCSSが割り当てられるし
自動で生成されてGitHubとかにも自動で連携されて
連携もできるんですね。結構そっちはもうプロダクションレベルで使えるレベル感で実際に導入もしてみて結構良かったんですけど
そっちを使うことである程度CSSの命名とかデザインの統一感みたいなのを作っていくみたいなのは今の段階でできるんですけど
そことプラスコンポーネント生成っていうところがまだちょっとインテグレーションが弱いっていうのと
もうちょっと先の未来になるんじゃないかなっていうのはやってみて思いましたね
なるほど。まあでも両方今できているものがこれからうまく混じり合っていくかどうかみたいな話なんでしょうね
なるほど
自動生成のところでコンポーネントごとに作成してくれるっておっしゃってたじゃないですか
すごい気になったんですけどあれってリアクトとかビューベースでなんかフロントのライブラリーベースで生成物生化物を切り替えられたりとかできますか
できます。結構そこが強いところだと思っていて
そのプラットフォームに一回エクスポートする理由もそのプラットフォーム上で解釈できるような形に一回落とすことで
そこからいろんな生化物ですねビューのコードだったりリアクトのコードだったりみたいなのに
エクスポートできるようにするっていう多分目的があるんだろうなと思っていて
一回コンパイルさせてるわけですね
そうですそうですそうです
っていうのが多分あるんだろうなと思っていて
なかったら個人的にはフィグマからプラグインで直接コード生成してGitHubとかに送ればいいのにって思ってたんですけど
そうじゃなく一回プラットフォームに入れるっていうのが多分そのいろんなコードベースに対応できるようにするためだったりだとか
プラットフォーム上でちょっと微修正してからエクスポートするとかっていうのができるようになってるんじゃないかなと
使ってみて思いましたね
プラットフォーム上でこのようにインポートしたものをちょっとコネコネしてそこからまたエクスポートさせる
そうですそうです
面白い
今回検証した中でそれぞれのやつのアウトプットは見られましたか
今回はビューのコード自動生成の部分だけを見てしまったので
ちょっとリアクトがどうとかっていうのはちょっと見れてないですね
滑るとどうかピュアだとどうか
これ聞いてる方に実際にちょっと見ていただきたいですね
そうですねぜひぜひ
実際そのビューの成果物を見てコードのクオリティとかステート管理とかどの辺までやってくれるんですか
基本的にはプロップスとかデータって呼ばれるものはステートですねは持たない
空の状態でコンポーネントが作られるので
そこから実際にデータを動的に入れていくみたいなコードはエンジニアで書かなきゃいけないので
あくまでデザイン上に見えてる文字列っていうのを
HTMLプラスビューで言えばスクリプトの部分とあとCSSの部分を書き出してくれるっていう感じでしたね
そこまで結構やってくれるんですね
そうですね結構テンプレートとして書き出してくれるっていうところまではやってくれる感じですね
なるほどあれですかフィグマってアニメーションっぽいこともできましたよね
そうですね
あの辺の生成とかは今回検証で試されましたか
アニメーションはトランジションとかは試したんですけど
ページ感とかページを移動する時のアニメーションとかっていうのはできてなくて
あくまでそのコンポーネントがインする時アウトする時とかみたいなもので検証した感じですね
でもそこのCSSの精度とかかなり良かったですね
そこも生成されるんですねしっかり
どんな感じで生成されるんですかCSS
例えばボタンドットクローズとかドットオープンみたいなクラスで生成されるのか
HTML DOMのエレメントのインプットチェックというとかの値を使って判定しているのか
あくまでクラスですね
クラスにCSSアニメーションのCSSが当たるみたいなイメージでしたね
それでも十分ですもんね
そうですね
面白いですね
今回3つのプラットフォームを検証されたと思うんですけど
今回検証される中で実際に検証してみてこの辺つらみだなとか
入れるなら3つのうちこれが良かったなっていうのがあればお聞きしたいんですけど
もうプロダクションでってことですよねアプリケーション作る上でってことですよね
そうですね
個人的にはテレポートHQっていうのが一番まだ使えるというか
柔軟性があるなと思ってまして
テレポートHQは結構コンポーネント独自で分けてくれるので
あとはそこをエンジニアの手を加えれるかどうかみたいなところなんですけど
結構プラットフォーム上でこのコンポーネントは分けたくないとか
このコンポーネントの中のこの指定の仕方はこうしたいみたいなものが
プラットフォーム上で結構UIベースで設定し直せるっていうところがあるので
テレポートHQを使ってエンジニアがプラットフォーム上で作業すること前提で
プロダクションに入れるみたいなのは結構ありなのかなっていうのが印象でしたね
なるほど
とはいえまだプロダクションレベルではきついかなって思ってるところが
やっぱりさっきも言った通りコードベースがどうしても
テレポートHQの吐き出されるコードベースに合わせていかなきゃいけないので
例えばリンターとかフォーマッターとか入れてるプロジェクト多いと思うんですけど
そこのルールに従わせるみたいなことはできないので
それに合った形で自分たちで書き換えるっていうのは絶対必要になってくるっていうところで
ちょっとそこがプロダクションに導入しなかった一番の理由かもしれないですね
なるほど
やはりこのプロダクトに合わせるっていう部分がまだちょっと弱いかなっていう感じ
そうですね あとインテグレーションかな
GitHubとのインテグレーションがちょっと弱くて
自動でプルリクエスト作るところまでやってくれればいいのにと思うんですけど
ちなみにさっき言ってたデザイントークンとかはもうすでにそういうところまで
インテグレーションが進化してるんですけど
ちょっとそこまでいかないとやっぱりGitHub上でレビューして
プロダクションに入れ込むっていうフローを取りたい場合に
一旦テレポートHQのところからコードエクスポートしてダウンロードしてきて
改編して自分でデビューをプルリク作ってやってもらうみたいな流れになっちゃうのがちょっとしんどかったですね
まだそこまで勝手にフォルダの中に生成してくれるわけではなくて
生成された成果物を自分たちでコピー&ペーストするみたいな感じなんですね
そういうイメージですね
じゃあまだちょっと結構工数がかかる
工数かかるかなって感じですね
ちょっと話が変わっちゃうんですけど
ChatGBTとかFigmaとかでもそうですけども
AIを活用して自動生成するっていうのが今
多分ここ近年流行っているのかなと思うんですけど
話を聞いてる感じだとそこが今うまくすごく進化しているので
近い将来その辺とかもちょろっと簡単にやってくれそうな感じはしますね
いや絶対あると思いますよ世界線は
Figmaもデザインレビューみたいなものを取り入れられるように
オーガニゼーションプランとかだとブランチ機能みたいなものがあって
デザインレビューした後に必ず最新のデザインにマージしていくみたいな
フローが作れるようになったりしますし
もしかしたらそういうところとかも
AIの力で自動でレビューしてマージしていくみたいなものとか
出てくるだろうなっていうのと
なんならテレポートHQとかで自動生成されたコンポーネントを
AIにこういうパラメーターでこういうコードベースで
作ってくださいっていうのだけ教えておけば
自動でエンジニアがやってた改善みたいなところをやってくれて
GitHubにプールリクが自動で投げられて
あとはエンジニアが見て問題なければプロダクションに入るみたいな
世界線っていうのは結構近い将来
ありそうですよね
来そうなんじゃないかなっていうのは思ってますね
確かにさっき話してたちょっと手のかゆいところ
届かないところをもうAIにやってもらうみたいなね
全然あると思いますね
先ほど話したリンターのルールだとか
システムデザインのルールだとかを入れておけば
勝手に直してくれる世界線これ来ますね
間違いなく来ると思いますし
その辺はやっぱりFigmaがどれくらい力を
入れていきたいと思っているのかに
依存するのかなって思うので
是非Figma
頑張ってほしいですね
アドビさんになるんですかね
アドビさんですね
でもアドビさん最近あれですよね
なんだっけ3D
あれはレチアスプレンダーでしたっけ
最近もうフロントベースでオブジェクト生成してくれる
ごめんなさいアドビさんだったか
ちょっと忘れてしまったんですけど
デザイナーツールで
AIに例えば丸いオブジェクト作って
って言うともう3Dがパッて生成される
っていうツールがあって
デザインの方も今もあれですよね
GPTなんかはラフ画で写真撮っておくと
それをもう生成してくれるみたいな形があるので
できないことはないんだろうなと思いながら
そうなった時に本当にもう
簡単なものであればエンジニアいらずに
フィグマ上だけで
フィグマでモック作ったらそれが
そのままプロダクトになっていくみたいな世界性
恐ろしいですね
恐ろしいですか
個人的にはむしろそっちの方が
エンジニアがより
なんだろうな
コアな部分に集中できるというか
どうしてもその機能を世に出さないと
お金にならないっていうところがあるからこそ
エンジニアがもうとにかく
機能を作らないと話にならないみたいな
世界線が今だと思うんですけど
そこからもっとより行動堅牢にしたりとか
いわゆるエンジニアリングって呼ばれてる
デリバリー早めるために
エンジニアがどう動けばいいのかとか
あと組織としてはどういう組織がいいのか
ところにアジャイル開発とか含めて
そういうところに集中していけるように
個人的にはなるんじゃないかなと思ってて
むしろ面倒くさいところは全部AIに任せて
コアな部分というか
よりビジネス価値を生んでいくところに
エンジニアリングリソースが使えるっていうのは
すごい良い世界線なんじゃないかなと思って
楽しみにしてる派の人間ですね
おっしゃる通りです
結構先ほどのFigmaとかもそうですけども
なかなか細かいところをやってしまうと
ビジネスモデルとかコアな部分
もっとやらなくてはいけないようなところとかも
なかなか手が出せなくて
辛い思いをしている我々がいて
そうなんですよね
だったところで簡単なものはAIにやってもらって
僕らもそれをレビューするだけで
あとはシステムの安定性だとか
デリバリー速度を早めるようなところに
集中できるようになったら幸せ
幸せですよエンジニアとしては
デザイナーさんもそんなような感じになってくるんじゃないかな
そうですね
デザイナーに求められる能力みたいなものも
多分変わってくるのと
エンジニアとデザイナーの境目みたいなのも
なくなってくるんじゃないかなと思っているので
エンジニアもちゃんとデザインのことを分かって
レビューできなきゃいけないし
デザイナーもある程度エンジニアリングのことというか
CSSどうやって組み立てたらいいのかみたいなのを知った上で
フィグマを作れるみたいな
ところまで求められるんじゃないかなっていうのは
すごい感じましたね今回
そうですねなるほど
確かに僕らの境がだんだん混じり合って
なくなってきているような
時代がやってきそうですね
そんな気がします
じゃあもうそろそろ時間が来ているんですけども
最後に改めてポッドキャストを参加していただいて
検証結果とかをもう一度話されてみて
その辺の感想とかお伝えしたいことがあれば
お聞きしたいんですけども
そうですね
結構これ前にやった検証なんですけど
こうやって社内でお声掛けいただいて
ポッドキャストで話してみないってみたいな
目に留まるものなんだなっていうのも知れてよかったのと
あと実際にPOCでやってみたことが
こういう発信することによって
誰かの役に立ったりだとか
世間的にこういうこともできるんだみたいな
希望につながればいいのかなと思ったりするので
こういう社内の活動というか
っていうのはすごいいいなっていうのと
そこに参加できたっていうのは
すごい嬉しいなと思ってます
ありがとうございます
なかなか話題は聞いてるけども
手をつけられてなかったようなところの
実際の話を聞いてみて面白いですし
聞いたことない話とかもたくさん聞けてよかったですし
今回おそらくリスナーさんたちとか聞いてる方たちなんかも
同じような思いで聞いてるんじゃないかなと思って
ぜひ実際に手で触ってみて
もしかしたらまた今も進化して変わってきてるかもしれないので
プロダクトの方とかにも入れていただけたらなと思いますね
ではすみません本日はこれで終了したいんですけども
忙しながら来ていただいてありがとうございました
面白い話が来ました
ありがとうございました
また機会がありましたらよろしくお願いします
それでは本日ポッドキャストを終わりにいたします
ファシリテーターは株式会社白石がお送りいたしました
それでは皆さんまた会いましょう
バイバイ
バイバイ
