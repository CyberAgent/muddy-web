start	end	text
0	11000	マディウェブポッドキャストは、マディの意味が泥であるように ウェブフロントエンドの開発現場における泥臭い話などから学びを得ることを目的とし、
11000	24000	実際に明日から使えるかもしれないウェブフロントエンド知識や技術を 参加者の皆様と共有し合うことを通して、フロントエンド海外の役に立てるように思いを込めて発信しています。
25000	29000	はい、それではマディウェブポッドキャストを始めていきたいと思います。
29000	36000	本日はですね、フィグマからコンポーネントの自動生成についてということでお話ししていきたいと思います。
36000	42000	本日ゲストにお越しいただいております黒沢拓さんこと黒沢拓真さんです。
42000	44000	どうもよろしくお願いします。
44000	45000	よろしくお願いします。
45000	49000	すいません、軽く聞いている方に自己紹介の方よろしくお願いします。いいですか?
49000	52000	はい、黒沢拓真と申します。
52000	56000	普段はAI事業本部というところで所属していまして、
56000	62000	フロントエンドの開発だったりバックエンドの開発だったりというのを担当しているエンジニアになります。
62000	73000	今回MOKUMOKUというイベントでフィグマからビューのコードを自動生成というところで検証させていただいた内容を今日お話しできたらなと思いますのでよろしくお願いします。
73000	74000	はい、ありがとうございます。
74000	78000	入社はバックエンドで入られたんですよね。
78000	82000	それまで入る前はフロントエンドで希望していたって聞いたんですけども。
82000	83000	そうですそうです。
83000	89000	就活してた時代はフロントエンドエンジニアとして就活してたんですけど、
89000	98000	CAのテック道場というインターンで内定が決まったので、サーバーサイドエンジニアとして入社はしたって感じですね。
98000	99000	なるほど。
99000	103000	じゃあもうフロントもバックエンドも両方二刀流ということで。
103000	105000	そうですね、二刀流。
105000	117000	バックエンドに主軸は置いてるんですけど、もともといったプロダクトの方でフロントエンドをメインでやらせてもらってたっていうのもあるので、ちょっと二刀流でやらせていただいてます。
117000	127000	すみません、改めて今回フィグマからコンポーネントを自動で生成するお話だったんですけども、先ほどのMOKUMOKU、これ社内イベントでしたよね。
127000	128000	そうです。
128000	132000	というのはどんなものだったかちょっと教えていただいてもよろしいでしょうか。
132000	141000	MOKUMOKU、これPOCって呼ばれる、いわゆる概念検証って呼ばれるものですね。
141000	161000	POCをするとかよく言いますけど、あれをエンジニアとクリエイター向けにPOCをしつつ、MOKを作って世の中にどのくらい考えてるアイデアみたいなものが実装可能なのかみたいなところをコンテキストで競い合おうみたいなもので立ち上がったイベントになってます。
162000	172000	全2回開催されてまして、今回フィグマの検証したのは第2回の時に発表した内容になります。
172000	183000	なるほど、実はこれ僕も1回目に参加してて、2回目に出てないんですけど、結構あれですよね、3日間、何日間でしたっけ、集中して開発やって、8日間みたいな感じですよね。
183000	195000	そうです。結構ハッカスに近いような形で、1人のチームとかもあったりするんですけど、2週間くらいでMOKを作ってもらって発表するみたいな感じですね。
195000	199000	その中でやったのがフィグマからPOD自動生成。
199000	200000	そうです。
200000	203000	どうしてこれの課題を選んだんですか?
203000	218000	もともとプロダクトでフィグマを使ってたのと、あとはVueを使ってて、CSSを各このエンジニア、フロントエンドエンジニアっていうのがメインで貼れる人が2人ぐらいしか当てられてなくて、
218000	223000	基本バックエンドエンジニアとかが頑張ってフルスタックに開発していくみたいなチーム組織だったんで、
223000	235000	できればデザインをフィグマで作ったらコンポーネントができるみたいな世界線ができれば、メインでフロントに貼る人が少なかったとしても結構回るんじゃないかなって思ってて、
235000	248000	そこでフィグマからPOD自動生成ってどのくらい実現可能性あるんだろうかみたいなのを検証すれば、ちょうどプロダクトでやりたいことにも下ろせるなと思ってやった感じですね。
248000	256000	なるほどですね。じゃあ結構事業って普段の仕事のところの環境からそういう課題を見つけて始めたということなんですね。
264000	271000	フィグマからこのPOD自動生成って話題になってますけども、実際にやったこととして具体的に言うとどんなことをやられたんですか?
271000	284000	実際にやったことっていうのはサービスを3つ取り上げまして、そこから生成されるビューのコードがどんなものかっていうのを実際に触ってみたみたいな感じになるんですけど、
284000	295000	具体的には今回取り上げたのがOverlayっていうツールと、あとテレポートHQか、とAnimaっていうのを取り上げたんですけど、
296000	301000	それぞれはフィグマに特化するツールってことですか?
301000	305000	そうです。フィグマプラグインに該当するのかなと思います。
305000	309000	例えばOverlayだとどんなプラグインなんでしょうか?
310000	323000	オーバーレイとかだと、いわゆるフィグマプラグインをフィグマにインストールしてもらって、作ったコンポーネントをオーバーレイにエクスポートするみたいなオプションがあるんですけど、
323000	334000	そうするとオーバーレイの提供しているUI上でコンポーネントの編集ができるのと、プラスコードのプレビューおよびエクスポートみたいなのが画面上でできるみたいな。
335000	342000	なるほど。フィグマのデザインからオーバーレイのプラグインにインポートさせてあげると、自動で変換させてくれる?
342000	344000	そうです。
344000	347000	他の2つのツールって何でしたっけ?
347000	351000	テレポートHQとAnimaですね。
351000	363000	どっちもオーバーレイと同じように、一旦各プラットフォームにフィグマからエクスポートしてきて、そこから自動生成をしてくれるみたいなサービスになってますね。
364000	366000	なるほど。その3つを検証したってことですね。
366000	367000	そうです。
367000	369000	どんなことを検証したんですか?
369000	386000	実際にフィグマで簡単なデザインをコンポーネント、カードビルなんですけど、それを作って、同じコンポーネントをそれぞれのプラットフォームにエクスポートしたときに、どういう感じでコード生成されるのかっていうのを検証したのと、
387000	406000	あとは完璧にコード生成してもらうっていうよりも、もともとプロダクトに入れたかったものとしては、デザインからある程度コード生成されて、ちょっとエンジニアが書き加えるぐらいのクオリティであればいいなと思ってたんで、それがどのくらいやりやすいのかっていうのが検証したかったので、
406000	415000	プラットフォーム上でどういう感じで変えれば上手い感じにコードを生成してくれるのかっていうところまで見た感じですね。
415000	416000	なるほど。
416000	422000	結構エンジニアのアシスト的な観点から検証を見ていたって形なんですね。
422000	423000	そうです。
423000	432000	実際にカードのデザインのコンポーネントを注入したときに、ツールごとにアウトプットって変わってくるんですか?
432000	434000	だいぶ違いましたね。
434000	435000	どんな違いでしたか?
436000	445000	結構エンジニアが書く流度で、そのコンポーネントを分けてくれるとこまでやってくれるプラットフォームもあれば、
445000	457000	HTMLベタ書きみたいな感じで、もうコンポーネントか考えません。もうとにかくHTMLで生成しますみたいな思想のプラットフォームもあるので、結構そこで大きく分かれるかなと思ってまして、
457000	472000	前者の方が結構プロダクトレベルに近いコード生成だなと思ってたので、個人的にはHTMLでベタ書きってよりはコンポーネントにちゃんと分けてくれるっていう方が好きだなと思いましたね。
472000	473000	なるほど。
473000	484000	結構このエンジニアから見て、しっかり実装を考慮したアウトプットか、HTMLのベタ書きだとLPとかに結構使えそうですね。
484000	495000	そうですね。今回検証してみて思ったのは、やっぱりまだ発展途上の技術だなっていうのは3つともに言えることだなと思ってて、
495000	503000	どうしたかというと、さっきコンポーネントに分けてくれるって言ったんですけど、そのコードベースもプラットフォームに依存するんですよ。
503000	514000	そのコンポーネント分けました、ディレクトリ構成こうなりますみたいなところまで全部プラグイン側が作っちゃうので、そのコードベースに合わせられるプロジェクトだといいと思うんですけど、
514000	523000	それに合わせられなくて、ちゃんとアトミックデザインをやりたいとか、フィーチャーフラグバッターやりたいとかってなった時に、ちょっとそこの連携が弱いというか、
523000	531000	ちゃんと自分たちで部品を改めて配置し直すみたいなことが必要になってくるっていうのがあったりだとか、
531000	540000	あとコンポーネントフィグマのどんどんアップデートされてってるんですけど、そのコンポーネント化していくみたいなフィグマの機能があるんですけど、
540000	557000	そこの機能に追従できてない感がどのツールもあって、やっぱりそこのフィグマ自体がまだ成長段階でもあるっていうところで、一緒に成長していくフェーズなのかなっていうようなのを感じますね。
557000	568000	結構出力される成果物のシステムデザインみたいなところはもうプラットフォームに合わせるか、自分たちで変えていく必要がある感じなんですね。
568000	572000	結構まだまだ使いづらいところはありそうですね。
572000	582000	だいぶプロダクションレベルでは使いづらいなって思うので、それこそLPみたいにデザイナーが作った通り画面に表示してほしいみたいなもので、
582000	592000	かつエンジニアがそんなにメンテしたくないみたいな用途の場合はかなり使える、すでにもう使えるんじゃないかなと思うレベルではありつつも、
593000	600000	ちょっとプロダクションでちゃんとコンポーネント設計してやっていきたいみたいなプロダクトだときついかなって感じですね。
600000	601000	なるほど。
601000	611000	なんかあれですね、ブログとかLPとか生成するとき結構デザインがあってエンジニアにこれを渡してこれを開発してくださいっていうのが多いかと思うんですけども、
611000	620000	そういったところにエンジニアを返さないで勝手に生成させてそれを発信するっていうような使い方では使えそうな感じなんですよね。
620000	625000	もうすでにかなり高いレベルで使えるんじゃないかなと思ってます。
625000	629000	レスポンシブとかはちゃんと対応してくれるコードになっているので、
629000	630000	あ、そうなんですね。
630000	638000	CSS自体は結構エンジニアが書いたものと同じぐらいのレベル感でアウトプットされるので、
638000	646000	コンポーネントとか考えなくてベタの1ページとかで考えたときにはかなりクオリティの高いものが出来上がってくる印象ですね。
646000	649000	面白いですね、そこまでやってくれるんだ。
650000	656000	気になったんですけど、よくあるCSSの当て方とかクラス名ってあるじゃないですか。
656000	665000	あれってすごい前に触ったときはID-なんとかいけてなかったんですよね。
665000	669000	今回触ってみてその辺とかってどんな感じでしたか?
669000	673000	そこは結構フィグマの作り方に依存しますね。
674000	679000	コンポーネントの分け方とかも結構フィグマに依存するところがあるんですけど、
679000	682000	フィグマのバリアントっていうものかな、
682000	687000	そういうのでちゃんと設定値で名前をコンポーネントにつけたりとか、
687000	692000	CSSのクラス名とかをちゃんと定義するっていうのができてれば、
692000	700000	ある程度エンジニアが書いたレベルで基本とかルールに則ったコードを生成してくれるようなイメージでしたね。
701000	706000	なので逆に言うとフィグマとか使うデザイナーの方になると思うんですけど、
706000	712000	そういう方にデザイン作る段階でそういうのを求めることにはなるので、
712000	718000	ちょっとデザイナーのレベルを上げなきゃいけないというか、
718000	721000	エンジニアの知識もちょっと吸収してもらわないと。
721000	729000	そうです。ちゃんとフィグマで命名してもらうみたいなところを徹底しないとちょっときついかもしれないですね。
729000	731000	CSSの命名とか。
731000	736000	なるほど。じゃあフィギュアのデザインのところにメタデータを入れるようなフォームがあって、
736000	738000	そこに入れていくって形になっている。
738000	739000	そうです。
739000	747000	確かにそういうの、そうですよね。デザイナーさんももはやそれができたらコードを書けるんじゃないかぐらい。
747000	748000	確かに。
748000	755000	確かにそうですよね。その辺の命名とかってしっかりしないとデザインとか崩れたりとかする可能性とかありますもんね。
755000	757000	全然あると思いますね。
757000	763000	特に大きいコードベースになってくるとその辺ちゃんと設計しないと破綻すると思う。
763000	775000	確かに。今回それはデザインルールみたいなのをしっかり定義すればそこの課題は解決できそうな印象でしたか?
776000	785000	ちょっと別文脈になるんですけど、このポックモックでは検証しなかったものの前回プロダクトで導入したものとして
785000	791000	デザイントークンっていうものがあるんですね。そっちはもう結構成熟期に入ってまして
791000	802000	フォームの自動生成をするわけではなく、カラーコードだったりとかマージンの大きさみたいなものをちゃんと企画化するというか
802000	811000	自分たちで一覧化してディクショナリーにしてあげることでデザイン全体の統一感を保つみたいなものがあるんですけど
811000	819000	そこのルールみたいなものをフィグマ上で作ってあげれば自動でCSSが割り当てられるし
819000	824000	自動で生成されてGitHubとかにも自動で連携されて
824000	835000	連携もできるんですね。結構そっちはもうプロダクションレベルで使えるレベル感で実際に導入もしてみて結構良かったんですけど
835000	846000	そっちを使うことである程度CSSの命名とかデザインの統一感みたいなのを作っていくみたいなのは今の段階でできるんですけど
846000	853000	そことプラスコンポーネント生成っていうところがまだちょっとインテグレーションが弱いっていうのと
853000	859000	もうちょっと先の未来になるんじゃないかなっていうのはやってみて思いましたね
859000	867000	なるほど。まあでも両方今できているものがこれからうまく混じり合っていくかどうかみたいな話なんでしょうね
867000	869000	なるほど
876000	882000	自動生成のところでコンポーネントごとに作成してくれるっておっしゃってたじゃないですか
882000	894000	すごい気になったんですけどあれってリアクトとかビューベースでなんかフロントのライブラリーベースで生成物生化物を切り替えられたりとかできますか
894000	899000	できます。結構そこが強いところだと思っていて
900000	909000	そのプラットフォームに一回エクスポートする理由もそのプラットフォーム上で解釈できるような形に一回落とすことで
909000	915000	そこからいろんな生化物ですねビューのコードだったりリアクトのコードだったりみたいなのに
915000	919000	エクスポートできるようにするっていう多分目的があるんだろうなと思っていて
919000	921000	一回コンパイルさせてるわけですね
921000	923000	そうですそうですそうです
923000	926000	っていうのが多分あるんだろうなと思っていて
926000	934000	なかったら個人的にはフィグマからプラグインで直接コード生成してGitHubとかに送ればいいのにって思ってたんですけど
934000	942000	そうじゃなく一回プラットフォームに入れるっていうのが多分そのいろんなコードベースに対応できるようにするためだったりだとか
942000	948000	プラットフォーム上でちょっと微修正してからエクスポートするとかっていうのができるようになってるんじゃないかなと
948000	950000	使ってみて思いましたね
950000	957000	プラットフォーム上でこのようにインポートしたものをちょっとコネコネしてそこからまたエクスポートさせる
957000	959000	そうですそうです
959000	960000	面白い
960000	966000	今回検証した中でそれぞれのやつのアウトプットは見られましたか
966000	972000	今回はビューのコード自動生成の部分だけを見てしまったので
972000	976000	ちょっとリアクトがどうとかっていうのはちょっと見れてないですね
976000	978000	滑るとどうかピュアだとどうか
978000	982000	これ聞いてる方に実際にちょっと見ていただきたいですね
982000	984000	そうですねぜひぜひ
984000	993000	実際そのビューの成果物を見てコードのクオリティとかステート管理とかどの辺までやってくれるんですか
993000	1002000	基本的にはプロップスとかデータって呼ばれるものはステートですねは持たない
1002000	1006000	空の状態でコンポーネントが作られるので
1006000	1013000	そこから実際にデータを動的に入れていくみたいなコードはエンジニアで書かなきゃいけないので
1013000	1017000	あくまでデザイン上に見えてる文字列っていうのを
1017000	1026000	HTMLプラスビューで言えばスクリプトの部分とあとCSSの部分を書き出してくれるっていう感じでしたね
1026000	1028000	そこまで結構やってくれるんですね
1028000	1035000	そうですね結構テンプレートとして書き出してくれるっていうところまではやってくれる感じですね
1035000	1041000	なるほどあれですかフィグマってアニメーションっぽいこともできましたよね
1041000	1043000	そうですね
1043000	1047000	あの辺の生成とかは今回検証で試されましたか
1047000	1053000	アニメーションはトランジションとかは試したんですけど
1053000	1060000	ページ感とかページを移動する時のアニメーションとかっていうのはできてなくて
1060000	1067000	あくまでそのコンポーネントがインする時アウトする時とかみたいなもので検証した感じですね
1067000	1072000	でもそこのCSSの精度とかかなり良かったですね
1072000	1074000	そこも生成されるんですねしっかり
1074000	1077000	どんな感じで生成されるんですかCSS
1077000	1085000	例えばボタンドットクローズとかドットオープンみたいなクラスで生成されるのか
1086000	1096000	HTML DOMのエレメントのインプットチェックというとかの値を使って判定しているのか
1096000	1098000	あくまでクラスですね
1098000	1105000	クラスにCSSアニメーションのCSSが当たるみたいなイメージでしたね
1105000	1107000	それでも十分ですもんね
1107000	1108000	そうですね
1108000	1111000	面白いですね
1111000	1116000	今回3つのプラットフォームを検証されたと思うんですけど
1116000	1124000	今回検証される中で実際に検証してみてこの辺つらみだなとか
1124000	1130000	入れるなら3つのうちこれが良かったなっていうのがあればお聞きしたいんですけど
1130000	1136000	もうプロダクションでってことですよねアプリケーション作る上でってことですよね
1136000	1137000	そうですね
1138000	1145000	個人的にはテレポートHQっていうのが一番まだ使えるというか
1145000	1148000	柔軟性があるなと思ってまして
1148000	1154000	テレポートHQは結構コンポーネント独自で分けてくれるので
1154000	1159000	あとはそこをエンジニアの手を加えれるかどうかみたいなところなんですけど
1159000	1163000	結構プラットフォーム上でこのコンポーネントは分けたくないとか
1163000	1168000	このコンポーネントの中のこの指定の仕方はこうしたいみたいなものが
1168000	1172000	プラットフォーム上で結構UIベースで設定し直せるっていうところがあるので
1172000	1179000	テレポートHQを使ってエンジニアがプラットフォーム上で作業すること前提で
1179000	1185000	プロダクションに入れるみたいなのは結構ありなのかなっていうのが印象でしたね
1185000	1186000	なるほど
1186000	1195000	とはいえまだプロダクションレベルではきついかなって思ってるところが
1195000	1199000	やっぱりさっきも言った通りコードベースがどうしても
1199000	1204000	テレポートHQの吐き出されるコードベースに合わせていかなきゃいけないので
1204000	1208000	例えばリンターとかフォーマッターとか入れてるプロジェクト多いと思うんですけど
1208000	1212000	そこのルールに従わせるみたいなことはできないので
1212000	1217000	それに合った形で自分たちで書き換えるっていうのは絶対必要になってくるっていうところで
1217000	1223000	ちょっとそこがプロダクションに導入しなかった一番の理由かもしれないですね
1223000	1224000	なるほど
1224000	1230000	やはりこのプロダクトに合わせるっていう部分がまだちょっと弱いかなっていう感じ
1230000	1233000	そうですね あとインテグレーションかな
1233000	1238000	GitHubとのインテグレーションがちょっと弱くて
1238000	1243000	自動でプルリクエスト作るところまでやってくれればいいのにと思うんですけど
1243000	1247000	ちなみにさっき言ってたデザイントークンとかはもうすでにそういうところまで
1247000	1249000	インテグレーションが進化してるんですけど
1249000	1255000	ちょっとそこまでいかないとやっぱりGitHub上でレビューして
1255000	1259000	プロダクションに入れ込むっていうフローを取りたい場合に
1259000	1264000	一旦テレポートHQのところからコードエクスポートしてダウンロードしてきて
1264000	1272000	改編して自分でデビューをプルリク作ってやってもらうみたいな流れになっちゃうのがちょっとしんどかったですね
1272000	1278000	まだそこまで勝手にフォルダの中に生成してくれるわけではなくて
1278000	1283000	生成された成果物を自分たちでコピー&ペーストするみたいな感じなんですね
1283000	1284000	そういうイメージですね
1284000	1288000	じゃあまだちょっと結構工数がかかる
1288000	1290000	工数かかるかなって感じですね
1295000	1298000	ちょっと話が変わっちゃうんですけど
1298000	1302000	ChatGBTとかFigmaとかでもそうですけども
1302000	1307000	AIを活用して自動生成するっていうのが今
1307000	1310000	多分ここ近年流行っているのかなと思うんですけど
1310000	1316000	話を聞いてる感じだとそこが今うまくすごく進化しているので
1316000	1323000	近い将来その辺とかもちょろっと簡単にやってくれそうな感じはしますね
1323000	1326000	いや絶対あると思いますよ世界線は
1326000	1332000	Figmaもデザインレビューみたいなものを取り入れられるように
1332000	1336000	オーガニゼーションプランとかだとブランチ機能みたいなものがあって
1336000	1341000	デザインレビューした後に必ず最新のデザインにマージしていくみたいな
1341000	1343000	フローが作れるようになったりしますし
1343000	1345000	もしかしたらそういうところとかも
1345000	1350000	AIの力で自動でレビューしてマージしていくみたいなものとか
1350000	1353000	出てくるだろうなっていうのと
1353000	1358000	なんならテレポートHQとかで自動生成されたコンポーネントを
1358000	1362000	AIにこういうパラメーターでこういうコードベースで
1362000	1364000	作ってくださいっていうのだけ教えておけば
1364000	1370000	自動でエンジニアがやってた改善みたいなところをやってくれて
1370000	1373000	GitHubにプールリクが自動で投げられて
1373000	1377000	あとはエンジニアが見て問題なければプロダクションに入るみたいな
1377000	1380000	世界線っていうのは結構近い将来
1380000	1381000	ありそうですよね
1381000	1384000	来そうなんじゃないかなっていうのは思ってますね
1384000	1388000	確かにさっき話してたちょっと手のかゆいところ
1388000	1391000	届かないところをもうAIにやってもらうみたいなね
1391000	1392000	全然あると思いますね
1392000	1395000	先ほど話したリンターのルールだとか
1395000	1399000	システムデザインのルールだとかを入れておけば
1399000	1403000	勝手に直してくれる世界線これ来ますね
1403000	1405000	間違いなく来ると思いますし
1406000	1409000	その辺はやっぱりFigmaがどれくらい力を
1409000	1411000	入れていきたいと思っているのかに
1411000	1414000	依存するのかなって思うので
1414000	1416000	是非Figma
1416000	1417000	頑張ってほしいですね
1417000	1419000	アドビさんになるんですかね
1419000	1420000	アドビさんですね
1420000	1423000	でもアドビさん最近あれですよね
1423000	1425000	なんだっけ3D
1425000	1427000	あれはレチアスプレンダーでしたっけ
1427000	1432000	最近もうフロントベースでオブジェクト生成してくれる
1433000	1435000	ごめんなさいアドビさんだったか
1435000	1437000	ちょっと忘れてしまったんですけど
1437000	1439000	デザイナーツールで
1439000	1442000	AIに例えば丸いオブジェクト作って
1442000	1445000	って言うともう3Dがパッて生成される
1445000	1446000	っていうツールがあって
1446000	1449000	デザインの方も今もあれですよね
1449000	1453000	GPTなんかはラフ画で写真撮っておくと
1453000	1456000	それをもう生成してくれるみたいな形があるので
1456000	1459000	できないことはないんだろうなと思いながら
1459000	1461000	そうなった時に本当にもう
1461000	1464000	簡単なものであればエンジニアいらずに
1464000	1466000	フィグマ上だけで
1466000	1469000	フィグマでモック作ったらそれが
1469000	1473000	そのままプロダクトになっていくみたいな世界性
1473000	1474000	恐ろしいですね
1474000	1476000	恐ろしいですか
1476000	1479000	個人的にはむしろそっちの方が
1479000	1482000	エンジニアがより
1482000	1483000	なんだろうな
1483000	1486000	コアな部分に集中できるというか
1486000	1489000	どうしてもその機能を世に出さないと
1489000	1492000	お金にならないっていうところがあるからこそ
1492000	1494000	エンジニアがもうとにかく
1494000	1497000	機能を作らないと話にならないみたいな
1497000	1499000	世界線が今だと思うんですけど
1499000	1503000	そこからもっとより行動堅牢にしたりとか
1503000	1506000	いわゆるエンジニアリングって呼ばれてる
1506000	1507000	デリバリー早めるために
1507000	1509000	エンジニアがどう動けばいいのかとか
1509000	1512000	あと組織としてはどういう組織がいいのか
1512000	1515000	ところにアジャイル開発とか含めて
1515000	1517000	そういうところに集中していけるように
1517000	1520000	個人的にはなるんじゃないかなと思ってて
1520000	1524000	むしろ面倒くさいところは全部AIに任せて
1524000	1526000	コアな部分というか
1526000	1529000	よりビジネス価値を生んでいくところに
1529000	1531000	エンジニアリングリソースが使えるっていうのは
1531000	1534000	すごい良い世界線なんじゃないかなと思って
1534000	1537000	楽しみにしてる派の人間ですね
1537000	1539000	おっしゃる通りです
1539000	1542000	結構先ほどのFigmaとかもそうですけども
1542000	1545000	なかなか細かいところをやってしまうと
1545000	1548000	ビジネスモデルとかコアな部分
1548000	1550000	もっとやらなくてはいけないようなところとかも
1550000	1552000	なかなか手が出せなくて
1552000	1555000	辛い思いをしている我々がいて
1555000	1557000	そうなんですよね
1557000	1560000	だったところで簡単なものはAIにやってもらって
1560000	1562000	僕らもそれをレビューするだけで
1562000	1565000	あとはシステムの安定性だとか
1565000	1568000	デリバリー速度を早めるようなところに
1568000	1571000	集中できるようになったら幸せ
1571000	1574000	幸せですよエンジニアとしては
1574000	1578000	デザイナーさんもそんなような感じになってくるんじゃないかな
1578000	1579000	そうですね
1579000	1582000	デザイナーに求められる能力みたいなものも
1582000	1584000	多分変わってくるのと
1584000	1587000	エンジニアとデザイナーの境目みたいなのも
1587000	1590000	なくなってくるんじゃないかなと思っているので
1590000	1593000	エンジニアもちゃんとデザインのことを分かって
1593000	1595000	レビューできなきゃいけないし
1595000	1599000	デザイナーもある程度エンジニアリングのことというか
1599000	1602000	CSSどうやって組み立てたらいいのかみたいなのを知った上で
1602000	1604000	フィグマを作れるみたいな
1604000	1607000	ところまで求められるんじゃないかなっていうのは
1607000	1609000	すごい感じましたね今回
1609000	1611000	そうですねなるほど
1611000	1616000	確かに僕らの境がだんだん混じり合って
1616000	1618000	なくなってきているような
1618000	1620000	時代がやってきそうですね
1620000	1622000	そんな気がします
1630000	1633000	じゃあもうそろそろ時間が来ているんですけども
1633000	1638000	最後に改めてポッドキャストを参加していただいて
1638000	1642000	検証結果とかをもう一度話されてみて
1642000	1646000	その辺の感想とかお伝えしたいことがあれば
1646000	1648000	お聞きしたいんですけども
1648000	1650000	そうですね
1650000	1653000	結構これ前にやった検証なんですけど
1653000	1656000	こうやって社内でお声掛けいただいて
1656000	1659000	ポッドキャストで話してみないってみたいな
1659000	1663000	目に留まるものなんだなっていうのも知れてよかったのと
1663000	1667000	あと実際にPOCでやってみたことが
1667000	1669000	こういう発信することによって
1669000	1671000	誰かの役に立ったりだとか
1671000	1675000	世間的にこういうこともできるんだみたいな
1675000	1678000	希望につながればいいのかなと思ったりするので
1678000	1681000	こういう社内の活動というか
1681000	1684000	っていうのはすごいいいなっていうのと
1684000	1686000	そこに参加できたっていうのは
1686000	1689000	すごい嬉しいなと思ってます
1689000	1690000	ありがとうございます
1690000	1693000	なかなか話題は聞いてるけども
1693000	1696000	手をつけられてなかったようなところの
1696000	1699000	実際の話を聞いてみて面白いですし
1699000	1702000	聞いたことない話とかもたくさん聞けてよかったですし
1702000	1706000	今回おそらくリスナーさんたちとか聞いてる方たちなんかも
1706000	1708000	同じような思いで聞いてるんじゃないかなと思って
1708000	1711000	ぜひ実際に手で触ってみて
1711000	1714000	もしかしたらまた今も進化して変わってきてるかもしれないので
1714000	1718000	プロダクトの方とかにも入れていただけたらなと思いますね
1718000	1722000	ではすみません本日はこれで終了したいんですけども
1722000	1724000	忙しながら来ていただいてありがとうございました
1724000	1725000	面白い話が来ました
1725000	1726000	ありがとうございました
1726000	1729000	また機会がありましたらよろしくお願いします
1729000	1733000	それでは本日ポッドキャストを終わりにいたします
1733000	1736000	ファシリテーターは株式会社白石がお送りいたしました
1736000	1738000	それでは皆さんまた会いましょう
1738000	1739000	バイバイ
1739000	1740000	バイバイ
