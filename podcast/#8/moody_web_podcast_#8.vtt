WEBVTT

00:00.000 --> 00:11.000
マディウェブポッドキャストは、マディの意味が泥であるように ウェブフロントエンドの開発現場における泥臭い話などから学びを得ることを目的とし、

00:11.000 --> 00:24.000
実際に明日から使えるかもしれないウェブフロントエンド知識や技術を 参加者の皆様と共有し合うことを通して、フロントエンド海外の役に立てるように思いを込めて発信しています。

00:24.000 --> 00:28.000
はい、それではマディウェブポッドキャストを始めていきたいと思います。

00:28.000 --> 00:32.000
ファシリテーターを務めますは株式会社しろく石井です。

00:32.000 --> 00:38.000
本日ゲストでお越しいただいている方が中川海人さんになります。

00:38.000 --> 00:40.000
こんにちは、中川海人さん。

00:40.000 --> 00:41.000
こんにちは、よろしくお願いします。

00:41.000 --> 00:42.000
よろしくお願いします。

00:42.000 --> 00:47.000
すいません、簡単に自己紹介、どこの事業所にいるかと自己紹介の方をよろしくお願いします。

00:47.000 --> 00:50.000
はい、ファンベース事業部に所属しております。

00:50.000 --> 00:52.000
中川海人と申します。

00:52.000 --> 00:58.000
普段はファンベースアリーナというプラットフォームのウェブフロントエンドの事業に従事しております。

00:58.000 --> 01:08.000
今回はウェブスピードハッカーソン2023の開発に携わりましたので、その裏側だったりとかこういうことがありましたよという話をさせていただければいいかなと思っております。

01:08.000 --> 01:09.000
本日はよろしくお願いします。

01:09.000 --> 01:11.000
はい、よろしくお願いします。

01:11.000 --> 01:19.000
今さっき話し終わったんですけど、今日のトピックウェブスピードハッカーソンということで、前回2回目ですかね。

01:19.000 --> 01:32.000
以前に同じような収録をして、その時が2022年の収録だったんですけども、今回2023年に行ったウェブスピードハッカーソンについてお話していけたらなと思います。

01:33.000 --> 01:42.000
ウェブスピードハッカーソン、わからない、ご存知でない方がいらっしゃると思うので、簡単にウェブスピードハッカーソンとは何ぞやということをちょっと紹介していただけますか。

01:42.000 --> 01:58.000
ウェブスピードハッカーソンとは、重たいサイトがイベントとして出題されるので、その重たいサイトっていうのをチューニングをして、使い勝手の良い軽いサイトにしていって、それを競っていただくっていう競技向けのイベントとなっております。

01:58.000 --> 02:09.000
イメージしやすいので言うと、ミスコンのようなパフォーマンスチューニングのイベントがあるかなと思うんですけれども、それのウェブフロントエンド版だと思っていただくとイメージしやすいかなと思っております。

02:10.000 --> 02:19.000
いかにもフロントエンドエンジニアが好きそうなパフォーマンスチューニングみたいな感じのやつのコンテストみたいな感じですよね。

02:19.000 --> 02:31.000
僕まだ実は出てなくて、出ようと思っているんですけど、ちょっと機会がないので、今回2023年の運営を行っていただいたということですかね。

02:31.000 --> 02:32.000
そうですね。

02:32.000 --> 02:39.000
これ前回2022年と2013年の違いとか差分みたいなところって何かあるんですか。

02:39.000 --> 02:52.000
そうですね。一番大きなイベントとしての差分っていうところだと、今年のウェブスピードハッカソンは学生と社内向けのイベントを同時に開催したっていうところが一番大きなところかなと思っています。

02:52.000 --> 02:55.000
前回あれでしたっけ?別々でやったんでしたっけ?

02:55.000 --> 03:09.000
そうですね。実は今までウェブスピードハッカソンは3回開催しているんですけれども、いずれも実はそれぞれのイベントで3回ウェブスピードハッカソンをやっていて、具体的には学生向け、社内向け、一般向けの3回をそれぞれやっていたんですね。

03:09.000 --> 03:20.000
純粋に3回やるっていうところで運営のコストも結構大変だったりするので、そこを1回でまとめてやってみようっていうのが今年の新しい取り組みかなって感じですね。

03:20.000 --> 03:27.000
そうですね。3回やるってなるとなかなか厳しいところを今回は1回でまとめてやったということで。

03:27.000 --> 03:34.000
結構参加人数、そうすると合計すごく多いんじゃないですかね。今回どれくらい参加されたんですか?

03:34.000 --> 03:49.000
そうですね。申し込みだけでも一般の方が70名超えで、学生の方も60名超えっていうところで、だいたい合計130人規模のイベントとなって、歴代で一番盛り上がったらいって感じですね。

03:49.000 --> 03:52.000
すごいですね。今回オンラインとオフライン?

03:52.000 --> 03:56.000
そうですね。オンライン、オフライン両方で開催したっていう感じですね。

03:56.000 --> 03:58.000
オフラインは会場は?

03:58.000 --> 04:00.000
そうですね。アルマタワーのところで。

04:00.000 --> 04:03.000
はい。どれくらいオフラインで参加されました?今回。

04:03.000 --> 04:21.000
そうですね。一応オフラインで参加してくださったのは学生の方だけっていうところで応募をかけたんですけれども、だいたいイベント自体は2日あったんですけど、合計で多分30名くらいの方がオフラインで参加してくださって、残りの方がオフラインっていう感じでしたね。

04:21.000 --> 04:37.000
結構な方がオフラインで、コロナ明けっていうところからやっとオフラインでできたということで、その現場とか見てみたかったですけど、わきあいあいとしてやられた感じですか?

04:37.000 --> 04:51.000
そうですね。もう意外と競技始まってしまえばみなさん自分のパフォーマンスの課題に取り組んじゃうので、もうほんと沈黙したという雰囲気があったりしたんですけれども、ほんとみなさん真剣に取り組んでいただいたって感じですね。

04:51.000 --> 04:56.000
会場シーン、パソコンのタイピングの音だけが鳴り響くみたいな。

04:57.000 --> 05:10.000
一応その人手の方が音楽を流して和わせようという雰囲気とか作っていただいたりしたんですけど、基本的にはみなさん真面目に黙々と取り組んでいたっていうのがオフラインのイメージでしたね。

05:10.000 --> 05:12.000
良さそうですね。

05:13.000 --> 05:28.000
今多分声の音質とか変わってるかと思うんですけど、収録してたところが工事で音が入ってしまってですね、場所を移動しました。

05:28.000 --> 05:34.000
ということでちょっと声の音が変わっちゃってると思うんですけども、続けていきたいと思います。

05:34.000 --> 05:43.000
改めて、前回と今回、技術的なところでの新しい取り組みって何か他にありますか?

05:43.000 --> 05:53.000
新しい取り組みは今年のWebSpeed Hackathonでもたくさん取り入れたんですけれども、大きなところで言うと新しい採点方法を取り入れましたっていうところが一つ。

05:53.000 --> 06:01.000
二つ目が技術的に大きなところで言うと、GraphQLを導入したことっていうのが大きな取り組みかなと思っております。

06:01.000 --> 06:03.000
両方ちょっと面白そうですね。

06:03.000 --> 06:10.000
新しい採点方法、確かに前回採点方法について結構変えていきたいねっていう話をしてたんですよ。

06:10.000 --> 06:13.000
なので今回どういうふうに変わったんですかね?

06:13.000 --> 06:26.000
そうですね。まず大きなところはLighthouseのV10というバージョンのものを導入したので、それに伴ってユーザーフローという機能を使って採点方式を付け加えましたっていうところになります。

06:26.000 --> 06:28.000
ユーザーフローですか?

06:28.000 --> 06:39.000
ユーザーフローというのがページの読み込みだったりとか、そのページのインタラクションとか対話中にもそういったスコアを計算して、それを算出することができるというものでして、

06:39.000 --> 06:52.000
これによって室内者側としては新しい指標が取り入れられたので、新しい問題っていうのを出すことができたっていうところで結構運営側としては非常にありがたい機能だったっていうのがファーストインベッションでしたね。

06:52.000 --> 06:58.000
LighthouseはGoogle Chromeの検証ツールでスコアリングが取れるやつですよね。

06:58.000 --> 07:07.000
その中にユーザーフローという新しい機能が入って、それでスコアリングする項目が増えたっていう認識だったんですかね。

07:07.000 --> 07:12.000
ちなみにどんな新しい項目を採点基準に取り入れましたか?

07:12.000 --> 07:24.000
具体的には特徴的なところで言うと、インタラクショントゥネクストペイントっていう指標などがあったりして、その指標っていうのはいわゆるユーザーフローで測定することができる指標なんですけれども、

07:24.000 --> 07:36.000
今までのウェブスピードハッカソンでは過去3回にわたっていずれも同じ計算方法だったんですけれども、そのページのランディングに伴ってスコアを算出することができていたんですけれども、

07:36.000 --> 07:47.000
今回そのユーザーフローなどを導入したことによって、例えばユーザーがインプット要素にタイピングしている時のスコアのパフォーマンスとかっていうのを計算することができるようになったりとか。

07:47.000 --> 07:54.000
ユーザーのリアクトとかでステートが変わっていった時のパフォーマンスを取るみたいな。

07:54.000 --> 07:55.000
そうです。

07:55.000 --> 07:56.000
そんなのも取れるんですね。

07:56.000 --> 08:10.000
本当にパフォーマンスとして計算できる幅が広がったので、今まではいわゆるページランディング以外のところにデチューニングをしてもスコアにあまり影響がなかったりする場所がたくさんあったんですけれども、

08:10.000 --> 08:27.000
今回のユーザーフローの導入によって、今まででは出題できなかったような問題も取り入れることができたというところで、純粋に新しい問題を出題することができたというところは非常に開発していても面白かったなというのが思いますね。

08:27.000 --> 08:43.000
近年あれですもんね。ほとんどSPAとかサーバーサイトレンダリングで、JavaScriptでフロントを動かすみたいなところが流行っているから、そういうレンダーのパフォーマンスとかもどんどん測っていかないとなかなかいいウェブサイトが作れないよみたいな時代なんですかね。

08:43.000 --> 09:11.000
具体的に言うとリアクトを使って今年もウェブスピンハックスも出題したので、例えば一般的にリアクトを使っていればSPA遷移をしてページを遷移するというのがベーシックだと思うんですけど、あえて出題した状態というのはSPA遷移じゃなくて普通のページ遷移をするので、ページ遷移をするとページを1から読み直す必要があったりするので、そこの部分というのは結果的にユーザーフローの悪影響となっていたでしょう。

09:11.000 --> 09:25.000
これは去年のウェブスピンハックスなどで出題してもスコアに影響がない場所だったりしたので、そういった新しい問題というのがやっぱりリアクトらしさというところも出しているなと思いますね。

09:25.000 --> 09:51.000
グラフQLを新しく導入したということなんですけれども、ウェブスピンハックスのフロントエンドのパフォーマンスの競技にグラフQLが使われた理由というのがピンとこないんですけれども、どういった理由でグラフQLを導入したんですかね?

09:51.000 --> 10:17.000
実はグラフQLを採用した意図としては、新しいデチューニング案を出したい、それを出題したいという思いが個人的にあって導入したんですけれども、その背景としては意外と僕がデチューニングの試作を考えているときに、この問題がいいなと思ってそれを出題しようとしたときに、実は過去のウェブスピンハックスも既に出題済みだったりするんですよね。

10:17.000 --> 10:41.000
意外とそういう問題の重複というのが何度も何度もあって、いい問題を出すためには採用している技術を何か根本的に変えたほうが出しやすくなるんじゃないかという狙いがあって、過去のウェブスピンハックスの3回は全てREST APIでやってたんですけど、そこを思い切ってグラフQLにすることによって新しい問題を出したいというところにつながったのかなというふうに思いますね。

10:41.000 --> 10:48.000
そういった違う技術の採用を通して出題する問題の幅を広げるみたいな感じですね。

10:48.000 --> 10:53.000
実際グラフQLを導入してみて良かった点とか悪かった点はありますか?

10:53.000 --> 11:01.000
良かった点で言うと、先ほどもちょっと述べたとおり、新しい試作でデチューニングを出すことができたというところは本当に良かったと思っていて、

11:02.000 --> 11:09.000
例えば具体的に出したデチューニングの内容で言うと、一般的なベストプラクティスに修正する方法として、

11:09.000 --> 11:18.000
例えばNプラス1問題を実際に発生させてサーバーにすごい負荷をかけるような感じにしてレスポンスを補足することでデチューニングしたりとか、

11:18.000 --> 11:34.000
あとはクエリをわざと悪く組んで複数のリクエストに意図的に分割したりとか、余分なレスポンスデータを含ませたりとかというところもできたというところは非常にグラフQLを導入して良かったかなと思うところですね。

11:35.000 --> 11:51.000
悪かったところで言うと、いろいろあるんですけれども、具体的には一番印象的だったのは、全てのデチューニング試作を出題することができなかったというのが一番悔しいところですね。

11:51.000 --> 11:53.000
どういったことでしょうか?

11:53.000 --> 12:00.000
なんでそれが出題できなかったかというと、実はメモリ不足というのが一番大きかったんですけど、

12:00.000 --> 12:11.000
今年のウェブスピードハッカソンは、Fly.ioというサイトにアプリケーションをデプロイして、それをデプロイされたサイトに対してスコアを計測するという仕組みを取っていたんですけど、

12:11.000 --> 12:19.000
そのFly.ioのサイトのインスタンスのメモリが256MBという大きさだったんですね。

12:19.000 --> 12:26.000
一般的なアプリケーションであれば256MBで凝ったりするようなメモリのサイズだったんですけれども、

12:26.000 --> 12:34.000
今回GraphQLを使って、意図的にNプラス1問題を発生させた上でデプロイをやっていたんですけど、

12:34.000 --> 12:40.000
そういうところも踏まえて、結構サーバーに負荷がかかるような実装で開発をしていたんですね。

12:40.000 --> 12:48.000
いざFly.ioにデプロイしてみると、メモリが足りなくてノードが落ちてしまうという問題がすごく発生してしまって、

12:48.000 --> 12:54.000
そのメモリ不足によってやりたいGraphQLの試作を入れることができなかったんですね。

12:54.000 --> 13:04.000
なるほど。悪く作ろうとすればするほどメモリを送っていくという、すごい面白いような取り組みで。

13:04.000 --> 13:10.000
具体的にどういったクエリを組んだかというと、特定のページに飛んだときに、

13:10.000 --> 13:15.000
今回作ったのがハイルオーガニックという名前のショッピングサイトを作ったんですけれども、

13:15.000 --> 13:19.000
ショッピングサイトというだけあって、商品のデータがたくさん保存されているんですね。

13:19.000 --> 13:26.000
その商品のデータを特定のページに飛んだときに、全金取得するというクエリを組んでいて、

13:26.000 --> 13:34.000
そのレスポンスが返ってくるまでに大体4分ぐらい、4分必要とするぐらい膨大なクエリを叩いていたりしたんですけど、

13:34.000 --> 13:41.000
それがメモリが落ちてしまって、出題としては出すことができなかったというところで非常に悔しいところで、

13:41.000 --> 13:47.000
デチューニングにも結構加減が必要なんだなというところが非常に勉強になったところですね。

13:48.000 --> 13:51.000
なるほどですね。

13:51.000 --> 13:55.000
今回出題した以上にデチューニングを用意してくださったけども、

13:55.000 --> 14:03.000
そういったメモリの問題などで悲しいことに出題を選ぶような感じになってしまったんですね。

14:03.000 --> 14:09.000
ぜひ今回選ばれなかったやつは次回取り入れてほしいなって感じがしますね。

14:09.000 --> 14:16.000
面白いですね。デチューニングをしたいが、それ以外の要素で絞られてしまうみたいな。

14:17.000 --> 14:20.000
逆に作っている側もいろんな勉強になりますね。

14:20.000 --> 14:24.000
そうなんですよね。やっぱり普段デチューニングってことをしないじゃないですか。

14:24.000 --> 14:26.000
結構特殊な開発だと思うんですよね。

14:26.000 --> 14:27.000
逆ですよね。

14:27.000 --> 14:28.000
逆なんですよ。

14:28.000 --> 14:34.000
普段、いつも業務として開発している上には無意識でパフォーマンスがいいコードを書いたりしているんですけど、

14:34.000 --> 14:38.000
そういったところを頭使いつつ悪いコードを書かなきゃいけないので、

14:38.000 --> 14:45.000
そういったところは今回運営に携わって開発する方も大変なんだなっていうのは身をもって実感したところですね。

14:45.000 --> 14:49.000
やっぱり結構難しかったですか、デチューニングさせるために。

14:49.000 --> 14:51.000
いろんな知識とか必要な感じなんですかね。

14:51.000 --> 14:55.000
そうですね。いろんな知識が必要っていうのもそうなんですけど、

14:55.000 --> 15:02.000
あとはどういう風にソースコードにデチューニングを落とし込むかっていうところが今回勉強になったなと思っていて、

15:02.000 --> 15:06.000
今回自分が運営に携わったのが初めてってこともあって、

15:06.000 --> 15:11.000
デチューニングをどうやってやってるかっていうのは今回初めて知ったんですけれども、

15:11.000 --> 15:21.000
実際に開発に携わって思ったのは、今回実は以前のマティウェブポッドキャストの出演者でもある宮城さんと野口さんと一緒に開発をしたんですけれども、

15:21.000 --> 15:29.000
その方々と一緒に開発していて思ったのは、デチューニングにも流儀があるっていうのもあって、

15:29.000 --> 15:34.000
そのデチューニングを何でもかんでもやればいいってものじゃなくて、

15:34.000 --> 15:43.000
ソースコードに落とし込んで、それをこういう感じでチューニングしてほしいなっていう意図を込められた風に開発をしているんですね。

15:43.000 --> 15:53.000
なので、非常に我々としてはウェブスピードハッカソンとしてイベントの体験を良くするためにチューニングの体験を良くしたいって思いが根本的にあって、

15:54.000 --> 16:04.000
分かりにくいソースコードを提供するんじゃなくて、分かりやすいソースコードかつチューニングの方針もなんとなくつかみ取れるような方針で開発をしていたりするので、

16:04.000 --> 16:12.000
そういったところで流儀があるんだなっていうところは非常にウェブスピードハッカソンの運営に携わって初めて理解できたところでしたね。

16:12.000 --> 16:20.000
むやみやたらに悪くするんじゃなくて、こういう問題を解いて、こういう風に解いてほしいからこういう風に書くみたいな感じだったんですね。

16:21.000 --> 16:25.000
ちなみに今回はどのような思いを込めて作成されましたか?

16:25.000 --> 16:34.000
今回の思いでいうと、分かりやすくチューニングの体験を良くしたいってところは変わらず開発をしていったので、

16:34.000 --> 16:46.000
例えばすごく難読で難しい試作に関しては、別のファイルに似たようなチューニング、こういう風にチューニングするといいよっていうヒントを別のファイルに散りばめたりして、

16:47.000 --> 16:54.000
自分の知識だけじゃなくても他のファイルを見るとヒントを得られるような試作を入れたりしていたので、

16:54.000 --> 17:07.000
パフォーマンスをチューニングしている時に分からない情報でも後からいろんなファイルを見たらこういう風に修正すればいいんじゃないかっていうようなチューニング体験は意識して開発したってのもありますね。

17:08.000 --> 17:11.000
他のファイルを参照するとヒントがあるっていう。

17:11.000 --> 17:17.000
リアルなエンジニアって空気を読むってことをするじゃないですか。

17:17.000 --> 17:28.000
あんな感じですよね。他のコードを読んでこういう風に書くんだなみたいな。こういう風に書くといいんだなみたいなところも学べるということで、いろいろ本当に思えば込められてるんですね。

17:38.000 --> 17:49.000
今回スコアボードの方も結構力を入れたっていう話を聞いたんですけども、スコアボードについて新しい取り組みとかもあるんですか?

17:50.000 --> 18:08.000
今年はスコアボードのサイトを自作したっていうのがありまして、競技として採点したスコアをそのサイトに反映させてリッチにUIを見せたいなと思って、そういうサイトを作りましたっていうのがベースですね。

18:08.000 --> 18:22.000
実は去年のウェブスピードハッカーさんの課題の一つでもあったんですけれども、複数の人がGitHub Actionsで採点をしたときに、採点が何個も同時に走ると採点が遅くなってしまうという課題があったりしたので、

18:22.000 --> 18:44.000
それを解決するために別でスコアを保持するデータベースを用意して、そこにスコアを上げることによって、並列でGitHub Actionsが走らせたときに採点が遅くなる問題を解決したいという思いもあったりして、別のスコアを保持する場所を作りたいという思いからスコアボードを作ったという背景がありますね。

18:44.000 --> 18:52.000
確かに前回のポッドキャストで採点が結構時間かかってしまった。何分くらいでしたっけ?20分くらいかかってしまったんでしたっけ?

18:52.000 --> 18:54.000
そうですね。

18:54.000 --> 18:58.000
今回は結構それも改善されたということですか?

18:58.000 --> 19:09.000
そうですね。今回に関しては実は採点してからそのスコアが反映されるまでだいたい10分とか、長くても15分とかで反映されるようになったんですけれども、

19:09.000 --> 19:20.000
ここも実は工夫がいろいろあって、実はいろんな施策を盛り込みすぎた結果、3000体の状態で採点をかけると同じく20分くらいかかっちゃうんですよね。

19:20.000 --> 19:22.000
前回と変わらず。

19:22.000 --> 19:35.000
20分くらいかかってしまって、それはVRTで見た目の表示作業にエラーがないかというところを見て、いろいろ検証していくと20分くらいかかってしまうというところが課題としてあったので、

19:35.000 --> 19:46.000
今年は思い切ってそのVRTというのを撤廃させて、いわゆるチューニング体験を良くするために採点したらすぐその結果が反映されるようにというところを意識して、

19:46.000 --> 19:50.000
VRTをなくしたので結果10分で採点ができるなというところですね。

19:50.000 --> 19:52.000
なるほどね。

19:52.000 --> 19:57.000
使っていたものを撤廃して新しいものを導入して工夫をしていったということで。

19:57.000 --> 20:06.000
そうですね。その反面やっぱりレギュレーション違反に停止させてしまう競技者の方がいるんじゃないかという懸念もあったりしたので、

20:06.000 --> 20:22.000
競技終了時に運営がレギュレーション違反をしていないかというところをそのアプリケーションを実際に手動でチェックする機会があるんですけれども、

20:22.000 --> 20:37.000
その何をどうチェックするかという一部を意図的に皆さんに見えるように公開したので、皆さんの手元の方で確認していただいてレギュレーション違反を防ぐためにそういったものを公開したという感じがありますね。

20:37.000 --> 20:42.000
なるほど。手元でこのレギュレーションリストがあってクリアしてください。

20:42.000 --> 20:43.000
そうです。

20:43.000 --> 20:46.000
それを導入して結構レギュレーション違反は定めましたか?

20:46.000 --> 20:52.000
そうですね。ちょっと残念ながらレギュレーション落ちしてしまう方はちょっと多かったのかなという気がしますね。

20:52.000 --> 20:55.000
そうなんですね。どんなレギュレーションで落ちてたんでしょう?

20:55.000 --> 21:00.000
やっぱり特定のインタラクションをした時に表示が崩れて見えちゃったりとか。

21:00.000 --> 21:06.000
ボタンを押して表示されるものがちょっと崩れて表示されるみたいなイメージですかね。

21:07.000 --> 21:12.000
あとは大きな差分で言うとログインボタンを押してもログインができないとか。

21:12.000 --> 21:21.000
いわゆる機能差分が結構発生してしまってレギュレーション落ちになってしまうという恐怖心の方が結構いらっしゃって。

21:21.000 --> 21:31.000
そこはちょっと運営としても事前にもう少しレギュレーション落ちをしていないかというのを検知できるような仕組みを整える必要があるかなと思っていて。

21:31.000 --> 21:42.000
まだちょっと確定ではないんですけれども、例えばE2Eのような自動テストを導入してそれに抵触していなければレギュレーション違反じゃないよねっていうのを事前に分かるように。

21:42.000 --> 21:48.000
ちょっと次回のウェブスピードハックスになればそういった導入をしてみたいかなというふうに思ってますね。

21:48.000 --> 21:52.000
レギュレーション違反の自動化みたいな形ですね。なるほど。

21:52.000 --> 22:03.000
結構やっぱり変えるだけでも元々の関数、ファンクションが崩れてしまったりだとか、もう動かなくなってしまったりっていうのが結構あるんですね。そういう話を聞いていると。

22:13.000 --> 22:20.000
本当に作成者の意図が読み取れるような、そういうお題だったのかなと思うんですけども。

22:20.000 --> 22:32.000
全体を通して何か次回もっと下で良くなるなぁとかありますか?それか個人的にすごい思い出に残る場面とかってありますか?

22:32.000 --> 22:43.000
そうですね。それでいうと結構イベント当日とかに関しては、我々ウェブイベントとしては当日発生してしまったミスとかに関しては当日修正していたりしたんですけれども、

22:43.000 --> 22:52.000
他のそういった余った時間では結構スコアボードのスコアの繊維を見ていたりとか、あとはそのツイッターとかでエゴサをしていたりしていたんですけれども、

22:52.000 --> 22:53.000
どんな感じのエゴサをしていたんですか?

22:53.000 --> 23:03.000
そうですね。ハッシュタグウェブスピードハッカさんとかっていうタグがあったりするので、それで見ていたりとか、あとはその文字列に含まれるウェブスピードハッカさんというところで検索をしていたりしたんですけれども、

23:03.000 --> 23:08.000
そういった中でやっぱりその競技終了間際のツイートが個人的に印象に残っていて、

23:08.000 --> 23:10.000
どんなツイートがあったんですか?

23:10.000 --> 23:19.000
一番印象的だったのはその競技終了間際に点数を上げるためにかなり思い切ったチューニングを行った人がいて、

23:19.000 --> 23:26.000
その人のチューニングの方法が間違って採点失敗してしまったらリーダーボードの上位から転落してしまう。

23:26.000 --> 23:32.000
けどうまくいったらリーダーボードにそのまま食い込めるよねみたいな感じのツイートをしている方がいて、

23:32.000 --> 23:36.000
やっぱりそういったウェブスピードハッカさんも一種の競技としてやっているので、

23:36.000 --> 23:42.000
そういう時間制限の中でいかに点数を伸ばすことができるかっていうところで、

23:42.000 --> 23:49.000
やっぱり今年は学生の方と一般の方を合わせて一緒に同時開催しているという人数が増えているところも相まって、

23:49.000 --> 23:53.000
すごい競技性が増しているなっていうのはそういったツイートだったり、

23:53.000 --> 24:00.000
あとはその競技終了間際の皆さんの動きとかを見ていると競技性がすごく増しているなっていうのは実感したなと思いますね。

24:00.000 --> 24:05.000
面白いですね。結構みんな本当にガチでやってくださっているみたいな感じなんですね。

24:05.000 --> 24:12.000
確かに今回一般の方と学生交えているんですけど、一般の方の方がチューニングがうまかったりとか、

24:12.000 --> 24:16.000
そういう結構レベルの差分とかは出てきたりとかしなかったんですかね。

24:16.000 --> 24:22.000
そうですね。結構リーダーボードの上位に食い込んでいる方に言うとやっぱり一般の方が多かったですね。

24:22.000 --> 24:28.000
やっぱその内訳とかを見ていると各ウェブスピードハッカさんで入賞したことがあるとか、

24:28.000 --> 24:31.000
以前のウェブスピードハッカさんで入賞したことがある人だったりとか、

24:31.000 --> 24:36.000
やっぱりその歴戦の重さみたいなことがリーダーボードの上位に食い込んだりしていたんですけれども、

24:36.000 --> 24:41.000
学生の方も本当に劣らずで、いわゆるレギュレーション違反をしてしまったんですけれども、

24:41.000 --> 24:46.000
点数的に言えばかなり上位の方の方がたくさんいらっしゃったりしたので、

24:46.000 --> 24:54.000
両方ともやっぱりそれぞれの強みというか、それぞれ活躍しているなっていう様子がリーダーボードを見て見受けられましたね。

24:54.000 --> 24:59.000
嬉しいですね。県内の学生たちのレベルが本当に年々上がっていく中で、

24:59.000 --> 25:04.000
こういうふうに一般の方と戦えるという感度があるということもいいですし。

25:04.000 --> 25:07.000
そうですね。今年初めてのチャレンジだったんですけれども、

25:07.000 --> 25:12.000
そういったところを見受けることができて本当に同時開催してよかったなと思いますね。

25:12.000 --> 25:14.000
そうですね。本当に。

25:14.000 --> 25:19.000
ちなみに次回は同じく同時開催で考えている形ですかね。

25:19.000 --> 25:23.000
そうですね。まだちょっと何とも決まっていないので何とも言えないんですけど、

25:23.000 --> 25:28.000
やっぱり競技性を増すために同時開催するんじゃないかなと個人的には思っていますね。

25:28.000 --> 25:34.000
なるほど。ちなみに次回新しく取り入れようとしていることとかってありますか。

25:34.000 --> 25:36.000
あれば教えてほしいなと思ったんですけど。

25:36.000 --> 25:40.000
まだ開発がそもそもまだ始まっていなくて、

25:40.000 --> 25:45.000
自分がウェブスピードハッカソンの今回は運営側として出たので、

25:45.000 --> 25:49.000
たぶん次回は問題を解く方に回ると思うので、

25:49.000 --> 25:52.000
そういった時にはどうなっているかというのが非常に楽しみですね。

25:52.000 --> 25:53.000
なるほど。

26:03.000 --> 26:07.000
そろそろ時間も来たということなんですけども、

26:07.000 --> 26:16.000
今回改めてポッドキャストで今回のスピードハッカソンを振り返ってみて感想とかってありますか。

26:16.000 --> 26:20.000
個人的にはやっぱりそういった運営に携わることによって、

26:20.000 --> 26:23.000
ウェブスピードハッカソンの方針だったりとか、

26:23.000 --> 26:27.000
例えば開発する上でこういった有意義があることだったりとか、

26:27.000 --> 26:30.000
新しい学びが非常にたくさんあったというところで、

26:30.000 --> 26:36.000
運営に携わって本当に楽しくイベントの運営ができたかなと思っております。

26:36.000 --> 26:39.000
ウェブスピードハッカソンも競技としての側面もある一方、

26:39.000 --> 26:44.000
パフォーマンスのチューニングの知識というところを学習する機会でもあると思うので、

26:44.000 --> 26:50.000
こういったイベントをより大きくして、将来的にはもっともっとウェブフロントエンドの業界として、

26:50.000 --> 26:55.000
パフォーマンス知識を貢献できるようなイベントにしていけたらなと思っているので、

26:55.000 --> 26:59.000
今後もこういったイベントに積極的に参加していこうかなと思っております。

26:59.000 --> 27:00.000
ありがとうございます。

27:00.000 --> 27:08.000
僕も聞いてて本当に裏話、作成者、いろんなことを思いながら作っているといったところと、

27:08.000 --> 27:17.000
いろんな方が参加してくださって、また本当に楽しんで参加してくださっているというのが聞いてて分かるなと思いますし、

27:17.000 --> 27:24.000
今後のウェブスピードハッカソンもいろんな方が参加してくれたらいいなと思いますし、

27:24.000 --> 27:31.000
僕も機会があればぜひウェブフロントエンジニアとして一回参加してほしいなと思いますね。

27:32.000 --> 27:40.000
はい、では本日マディウェブポッドキャスト、ウェブスピードハッカソンについていろいろ面白い話があったんじゃないかなと思います。

27:40.000 --> 27:44.000
ぜひ聞いている皆さん次回のイベントにも参加してほしいと思います。

27:44.000 --> 27:47.000
それでは皆さんありがとうございました。

27:47.000 --> 27:48.000
バイバイ。

