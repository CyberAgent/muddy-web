WEBVTT

00:00.000 --> 00:11.000
マディウェブポッドキャストは、マディの意味が泥であるように ウェブフロントエンドの開発現場における泥臭い話などから学びを得ることを目的とし、

00:11.000 --> 00:24.000
実際に明日から使えるかもしれないウェブフロントエンド知識や技術を 参加者の皆様と共有し合うことを通して、フロントエンド海外の役に立てるように思いを込めて発信しています。

00:24.000 --> 00:33.000
はい、では始めていきましょう。マディウェブポッドキャスト。 本日はウェブスピードハッカーソンについて話していきたいと思います。

00:33.000 --> 00:37.000
司会はこの私、株式会社シロキョーDCがお送りいたします。

00:37.000 --> 00:41.000
本日ゲストに3人の方にお越しいただいております。

00:41.000 --> 00:49.000
株式会社アメバTVから野口さんと宮城さん、 株式会社ウィンジケットから竹内さんがお越しいただいております。

00:49.000 --> 00:55.000
最初は軽く自己紹介の方から始めていきたいと思いますので、野口さんから。

00:55.000 --> 00:59.000
株式会社アメバTVから来ました野口と言います。

00:59.000 --> 01:06.000
ウェブスピードハッカーソン関連の話で言うと、ウェブスピードハッカーソンをそもそも提案したというか始めたのが自分という感じなので、

01:06.000 --> 01:10.000
今日はその辺の裏話とかもできればなと思っています。よろしくお願いします。

01:10.000 --> 01:15.000
よろしくお願いします。創設者ですね。神ですね。

01:15.000 --> 01:18.000
創設者なんですかね。

01:18.000 --> 01:21.000
続きまして宮城さんお願いします。

01:21.000 --> 01:26.000
株式会社アメバTVでウェブフロントエンジニアをやっている宮城と言います。

01:26.000 --> 01:32.000
僕はウェブスピードハッカーソンの第2回の作文をやっていまして、

01:32.000 --> 01:38.000
それからはずっと運営としても一緒に野口さんとやっているという感じですね。

01:38.000 --> 01:44.000
今日は続けていくというところに関しても何かいろいろ話せたらなと思っています。よろしくお願いします。

01:44.000 --> 01:47.000
よろしくお願いします。いろいろ聞きたいですね。

01:47.000 --> 01:50.000
続きまして竹内さんお願いします。

01:50.000 --> 01:55.000
竹内にのると申します。第1回の時に野口さんと同じく出させていただいたんですけれども、

01:55.000 --> 02:03.000
21年の新卒入者で今はウィンチケットのウェブチームで10月からテックリードとして開発を行っています。

02:03.000 --> 02:08.000
社内ではハンドルネームとしてドラっていう名前で呼ばれていることが多いです。

02:08.000 --> 02:14.000
スピードハッカーソンに関しては第1回と第2回は参加者として参加させてもらったんですけど、

02:14.000 --> 02:22.000
第2回は社内向けで優勝したことをきっかけに第3回の作文担当となって、第3回は作文担当させていただきました。

02:22.000 --> 02:25.000
今日はいろいろ話せたらなと思います。よろしくお願いします。

02:25.000 --> 02:29.000
よろしくお願いします。優勝者が来ましたね。

02:29.000 --> 02:40.000
やはり宮城君も第1回の優勝者という形で、そういう伝統的な形で優勝者が次のオーダーを作るみたいな形で続いているので。

02:40.000 --> 02:45.000
その辺はこれからちょっと詳しく聞いていきましょう。

02:45.000 --> 02:54.000
じゃあまずはじめなんですけども、ウェブスピードハッカーソンを知らない方もいるので、軽くどういうものかっていうのを説明していただきたいなと思うんですけども、

02:54.000 --> 02:57.000
のくじさんに説明していただいてよろしいでしょうか。

02:57.000 --> 03:05.000
ウェブスピードハッカーソンはどういうものかと言いますと、すごく重いウェブアプリケーションみたいなのをお題のアプリケーションという形で、

03:05.000 --> 03:13.000
出題みたいな形で出題しまして、それをいかに火薬できるか、快適なアプリケーションにチューニングできるかっていうところを競う、

03:13.000 --> 03:17.000
そういうハッカーソン形式の競技という形になっています。

03:17.000 --> 03:22.000
なので、いわゆるイスコンみたいなのもイメージしていただければわかりやすいかなと思うんですけれども、

03:22.000 --> 03:26.000
それのウェブフロントエンド版という感じですね。

03:26.000 --> 03:35.000
業界的には例えばリクルートさんであるとか、Googleでしたっけ?とかでもやっているというところがあったかなと思うんですけれども、

03:35.000 --> 03:41.000
それをサイバーエージェントでもやってみようということでやっているという感じになります。

03:41.000 --> 03:43.000
なるほど、ありがとうございます。

03:43.000 --> 03:47.000
名前はすごく聞いてて、結構話題になってますもんね。

03:47.000 --> 03:56.000
そうですね、ありがたいことに色々な企業とかでもウェブスピードハッカーソンの問題を使ってイベントをやってみたみたいな話とかも見たりはしているので、

03:56.000 --> 04:01.000
そういう形で広まっていっているというのは嬉しいなと思います。

04:01.000 --> 04:06.000
僕の同期でも何人かも出ててよかったという話はすごく聞いてて、

04:06.000 --> 04:10.000
次回僕もウェブフロントだけどまだ参加していないので、

04:10.000 --> 04:11.000
ぜひぜひ。

04:11.000 --> 04:13.000
参加したいんですけども、

04:13.000 --> 04:18.000
ウェブスピードハッカーソンどうして始めた企画とかってありますか?

04:18.000 --> 04:23.000
そうですね、始まった第1回が2020年の開始だったんですけれども、

04:23.000 --> 04:27.000
その時にちょうど普通の形でのインターンシップであるとか、

04:27.000 --> 04:33.000
ハッカーソン形式のイベントみたいなところがなかなかやりづらいねっていう話が一つあったっていうところが、

04:33.000 --> 04:38.000
ちょうどコロナが始まった頃だったので、その辺り難しいよねっていう話があったのと、

04:38.000 --> 04:46.000
あともう一つその頃パフォーマンスチューニングみたいなところを割とメインで仕事とかでもやっていたんですけれども、

04:46.000 --> 04:49.000
リクルートさんのイベントとかを見ていて、

04:49.000 --> 04:56.000
リクルートさんのイベントの場合には実際のサービスとして出ているアプリケーションをチューニングして、

04:56.000 --> 05:00.000
改善点がないかみたいなところを探していくっていう感じではあったんですけれども、

05:00.000 --> 05:09.000
それを実際にイスコンみたいな形で問題形式で出せないかなっていうふうに思ったのが割ときっかけっていう感じではあって、

05:09.000 --> 05:13.000
ただイスコンみたいなイベントを一人で開催するのはなかなか大変なので、

05:13.000 --> 05:20.000
さっきの採用系のところと絡めれば、割と会社のイベントとしても開催できるんじゃないかということで、

05:20.000 --> 05:28.000
それをきっかけで提案してみて、ぜひやってみましょうっていう感じでできたっていうのが最初の始まりっていう感じですかね。

05:28.000 --> 05:30.000
そうなんですね。

05:30.000 --> 05:34.000
じゃあ1回目の問題も野口さんが採用して。

05:34.000 --> 05:43.000
1回目のときはアミブロっていう、どこかで聞いたことあるような感じのブログのサービスなんですけれども、

05:43.000 --> 05:50.000
ブログのサービスがめちゃくちゃ重いっていう感じで、JSが30MBくらいあったりとか。

05:50.000 --> 05:54.000
30MB。本当にJSだみたいな。

05:54.000 --> 06:00.000
そういう形で1個1個リストでここは補足できるんじゃないかとか、

06:00.000 --> 06:05.000
こうすればサイズが膨らむんじゃないかみたいなところを1個1個考えていって、

06:05.000 --> 06:12.000
それをなるべく盛り込んだ形でアプリケーションを作ってみたいな感じでやったっていうのが最初ですね。

06:12.000 --> 06:17.000
なるほど。それの優勝者が本日来ていただいている宮塩さん。

06:17.000 --> 06:21.000
そうですね。社内でコンテストやって。

06:21.000 --> 06:26.000
あのときは2日間でやってましたか?

06:26.000 --> 06:30.000
そうですね。確か2日間だったかなと思っていて。

06:30.000 --> 06:33.000
そもそも社内版っていう話がどういうことなのかというと、

06:33.000 --> 06:36.000
そもそも社内版っていう話がどういうことなのかというと、

06:36.000 --> 06:41.000
最初は先ほどちょっとお話ししたように採用関連でということで、

06:41.000 --> 06:45.000
学生さん向けのハッカソンイベントという形で始めたんですけれども、

06:45.000 --> 06:51.000
個人的にやっぱりすごい良くできたので、じかじさんじゃないんですけど、

06:51.000 --> 06:54.000
すごい良い感じのアプリケーションが問題ができたので、

06:54.000 --> 07:00.000
それをぜひやっぱり学生さん向けだけで終わらせてしまうのはもったいないなというふうに思って。

07:00.000 --> 07:03.000
そのときに、作ったのは自分だけではなくて、

07:03.000 --> 07:10.000
そのときの運営がPAGさんとGASさんで3人でイベントをやったんですけれども、

07:10.000 --> 07:16.000
そのメンバーの中でもやはり社内だけで終わらせてしまうのはもったいないよねという話があって、

07:16.000 --> 07:22.000
ちょうどウェブパフォーマンスの技術力を社内でも上げていこうというような話とかもあったりするので、

07:22.000 --> 07:28.000
そこで社内向けにやることで、社内のエンジニア向けにも実際やってみようという感じでやったのが、

07:28.000 --> 07:31.000
社内向けで開催したという感じですね。

07:31.000 --> 07:36.000
それのときの優勝者がここにいる宮城くんという感じです。

07:36.000 --> 07:39.000
実際に解いてみてどうでしたか?

07:39.000 --> 07:47.000
解いてみて、あのときはむちゃくちゃ面白いおもちゃが転がってきてないですね。

07:47.000 --> 07:52.000
聞いてはいたんですけど、重たいタイトルをパフォーマンスチューニングしていくみたいな、

07:52.000 --> 07:55.000
ちょっと舐めてはいて、こんなに重たいんじゃないですかね。

07:55.000 --> 07:57.000
確かに想像を超えてくる感じがありますね。

07:57.000 --> 08:00.000
想像を超えてきてますね。

08:00.000 --> 08:06.000
普段の開発でここまで遅いのって普通プラスで出ないですね。

08:06.000 --> 08:08.000
確かに。

08:08.000 --> 08:11.000
シューニングしがいがあるっていうのはすごくありましたよね。

08:11.000 --> 08:13.000
なので夢中で解いちゃってて、

08:13.000 --> 08:21.000
社内版は平日にやったんで、ちょっと遅めの時間帯に18時くらいからみたいな感じでやって、

08:21.000 --> 08:28.000
20時くらいに一旦回としたらストップで、やりたい人がいたら深夜月にやっていいよっていう話だったんですけど、

08:28.000 --> 08:31.000
寝ずにずっとやってました。

08:31.000 --> 08:35.000
そんなにじゃあ本当に相当面白かったおもちゃが転がってきたんですね。

08:35.000 --> 08:37.000
いやー本当に良かったですね。

08:37.000 --> 08:42.000
こういうスポットで面白いことが入ってくるとやっぱりモチベーションがつながってきますよね。

08:42.000 --> 08:43.000
確かに。

08:43.000 --> 08:49.000
実際に重たいって感じたところってどういったところが重たいと感じました?

08:49.000 --> 08:53.000
まず初っ端に開くのに時間かかるんですよね。

08:53.000 --> 08:54.000
どれくらい?

08:54.000 --> 08:56.000
そもそも開くのか?

08:56.000 --> 08:59.000
3、40秒はかかるんですよね、開くのに。

08:59.000 --> 09:00.000
開くのに。

09:00.000 --> 09:04.000
ライトハウスで得点化してるんですけども、

09:04.000 --> 09:10.000
普通に作るとだいたい6、70点くらいはライトハウスってどんなに遅くても行く感じじゃないですか。

09:10.000 --> 09:13.000
たまに遅くて3、40点かなみたいな感じなんですけど、

09:13.000 --> 09:18.000
3回ともだいたい1点とか2点とか出てくるんですよね。

09:18.000 --> 09:19.000
聞いたことないね。

09:19.000 --> 09:22.000
のび太くんでも取らないようなスコアですね。

09:22.000 --> 09:25.000
一桁台とか0点とかを叩き出してくるので、

09:25.000 --> 09:33.000
本当に開くのに3、40秒とかひどい時はたぶん1分とかかかるようなサイトとかになっているって感じですね。

09:33.000 --> 09:36.000
それを解いていくと、改善していくと、

09:36.000 --> 09:42.000
実際にどういった改善をすることによってパフォーマンスが上がる仕組みになってくるんですか?

09:42.000 --> 09:49.000
基本的にはまず1つデータ量を減らしていくっていうところは本舗の方針としてあって、

09:49.000 --> 09:54.000
JavaScriptが全部Androidサイトでミニファインもされてないし、

09:54.000 --> 09:56.000
ソースマップもくっついてるみたいな感じなので、

09:56.000 --> 10:01.000
そこら辺を削っていくと普通のサイトになってくる。

10:01.000 --> 10:06.000
そうですね。30MBあったJSが5MBとか数MBぐらいには減るみたいな。

10:06.000 --> 10:09.000
そこからパフォーマンスってなってくると、

10:09.000 --> 10:12.000
どこから攻めてくるんですかね、ああいうのって。

10:12.000 --> 10:17.000
そうですね。結構パフォーマンスチューニング的な話にはなってしまいますけど、

10:17.000 --> 10:25.000
例えばJSを分割してそのページでしか使わないJSだけを読み込むようにしていったりとか、

10:25.000 --> 10:33.000
あと、結構重たいライブラリを入れることによってパッケージのサイズを大きくしたりっていうところもあったりするので、

10:33.000 --> 10:37.000
その辺をいかに違うライブラリに変えていったりとか、

10:37.000 --> 10:42.000
自前で実装していくことで軽量化していくみたいな話になったりとか。

10:42.000 --> 10:44.000
あと取り組みやすいところで言うと、

10:44.000 --> 10:47.000
第1回の時はまだなかったんですけれども、

10:47.000 --> 10:50.000
第2回あたりからLighthouseが測る指標として、

10:50.000 --> 10:55.000
CLS、Cumulative Layout Shiftが入ってきたので、

10:55.000 --> 10:57.000
そこのガタッとするところというか、

10:57.000 --> 11:01.000
意図的にめちゃくちゃガタガタするように作っていたりするので、

11:01.000 --> 11:05.000
そこをうまいことプレイスホルダー作ったりみたいなところが、

11:05.000 --> 11:09.000
1つ取り組みやすいところとしては最初出てくるのかなという感じですかね。

11:09.000 --> 11:11.000
第1回はなかったんですね、まだ。

11:11.000 --> 11:14.000
そうですね。第1回の時はまだCore Web Vitalsに、

11:14.000 --> 11:17.000
Core Web Vitals自体が確かなかった気がするので、

11:17.000 --> 11:21.000
Lighthouseの時はまだCLSという概念がなかったんですよね。

11:21.000 --> 11:24.000
2回目にはあったっていうことですか?

11:24.000 --> 11:27.000
そうですね。確かだと思いますね。

11:27.000 --> 11:31.000
そうですね。それを意識して実装を作ったので、

11:31.000 --> 11:33.000
あったと思いますね。

11:33.000 --> 11:36.000
2回目の覇者。

11:36.000 --> 11:38.000
ちょっと記憶が薄いですけど。

11:38.000 --> 11:41.000
そうですね。なので、少なくとも3回についても、

11:41.000 --> 11:44.000
CLSとかの覇者は結構あったので、

11:44.000 --> 11:48.000
Lighthouseが意外と指標が5つと6つくらいあるので、

11:48.000 --> 11:51.000
どれか1つをひたすら改善していくというよりかは、

11:51.000 --> 11:54.000
ある程度改善したら次の指標を改善しに行くみたいな、

11:54.000 --> 11:57.000
試験勉強じゃないですけど、

11:57.000 --> 12:02.000
要領の良さみたいなところも競技的なところでは必要になってくるかなという気がしてますね。

12:02.000 --> 12:05.000
もう1個を潰したら次の課題を潰していく。

12:05.000 --> 12:10.000
指標が30%、30%とか比率が決まって計算されているので、

12:10.000 --> 12:17.000
CLSが残ったままだといつまでも点数が1点以上上がらないという感じになっちゃうので。

12:17.000 --> 12:19.000
あれですね、今聞いている方はたぶん、

12:19.000 --> 12:24.000
次回の開催の時にすごい良いヒントが出られてるんじゃないかなと思ってますけど。

12:28.000 --> 12:31.000
2人とも回答して、

12:31.000 --> 12:36.000
次に作る側として参加されたってことなんですけども、

12:36.000 --> 12:42.000
作る方もなかなか考えながら作ってるんだなという感じに分かってきたんですけども、

12:42.000 --> 12:44.000
実際に作っている中で、

12:44.000 --> 12:47.000
ここめちゃくちゃ大変だったなとか、

12:47.000 --> 12:51.000
すごい努力さえ作業したよみたいな話を聞いていきたいんですけども、

12:51.000 --> 12:54.000
そういったところってありましたか?

12:54.000 --> 12:58.000
そうですね、僕は第2回を実装したんですけど、

12:58.000 --> 13:01.000
第2回、第3回もなんですけど、

13:01.000 --> 13:05.000
前のやつで大体ネタがバレてるんで、

13:05.000 --> 13:11.000
そこをまず新しく何かを入れていかなきゃいけないというところが結構難しかったですね。

13:11.000 --> 13:17.000
僕の時は普通のブログサービスとしてもあって、

13:17.000 --> 13:21.000
野口さんが出題の意図というのも実は公開されているので、

13:21.000 --> 13:26.000
そういうので普通のパフォーマンスチューニングはそれを見ればできるみたいな状態になって、

13:26.000 --> 13:33.000
そこから普通じゃないパフォーマンスチューニングを考えるというところがなかなか難しかったですね。

13:33.000 --> 13:40.000
自分が作ったやつはTwitterみたいな感じの単文を投稿できるSNSを作ったんですけど、

13:40.000 --> 13:43.000
前はブログサービスだったのであんまり動画とか、

13:43.000 --> 13:46.000
あとはウェブフォントが入っていたかもしれないけれども、

13:46.000 --> 13:49.000
全部にフォントを入れるとかっていうのはやってなくて、

13:49.000 --> 13:53.000
今回はそことかを入れたりとかしてやってたんですよね。

13:53.000 --> 13:56.000
意外と触れたことないような分野、

13:56.000 --> 14:00.000
普段自分が触れたことないような分野に全体を通して触っていくと

14:00.000 --> 14:03.000
どんどん触れていくことができるっていうのが

14:03.000 --> 14:07.000
ウェブスピード博士の面白いところかなという気はしていますね。

14:07.000 --> 14:14.000
第3回も第3回でまた違ったところをターゲットにした実装になっているので。

14:14.000 --> 14:18.000
第3回は結局結構テーマに悩んで最初、

14:18.000 --> 14:22.000
何のサイトをモチーフにしてそういうサイトを作ろうかなというのを考えて、

14:22.000 --> 14:27.000
結局自分が普段関わっているベッティングサービスに落ち着いたんですけれども、

14:27.000 --> 14:30.000
作ってて思ったのは結構ベッティングサービスって

14:30.000 --> 14:33.000
ブログとかSNSとかと違って、

14:33.000 --> 14:36.000
本当に文字情報とかがやっぱりメインになってくるので、

14:36.000 --> 14:38.000
そうなると文字情報をメインのサイトで

14:38.000 --> 14:42.000
遅くするっていうのが意外と大変なので、

14:42.000 --> 14:47.000
そこで作文し始めてからデチューニングで結構苦労したりはしましたね。

14:47.000 --> 14:48.000
結構に難しい。

14:48.000 --> 14:52.000
聞いていると作る側もなかなか勉強しながらやっていくっていう。

14:52.000 --> 14:54.000
そうですね。

14:54.000 --> 14:58.000
結局どの辺をデチューニングするっていう感じになったんでしたっけ?

14:58.000 --> 14:59.000
そうですね。

14:59.000 --> 15:01.000
それでいうと画像は使っていたので、

15:01.000 --> 15:06.000
画像に関してさっきのレイアウトシフトが発生するような風に組んでみたり、

15:06.000 --> 15:08.000
そもそも画像の表示に時間がかかるように

15:08.000 --> 15:13.000
普通のイメージタグを使うのではないちょっと特殊な実装にしてみたりとかをしました。

15:13.000 --> 15:16.000
あとはウェブフォントを引き続き使ったりですとか、

15:16.000 --> 15:19.000
あと第1回、第2回になかったのとしては、

15:19.000 --> 15:22.000
時間に伴う表示みたいなところがあったので、

15:22.000 --> 15:28.000
そこで処理が重くなったりするような実装を入れたりするっていう工夫をしたりしました。

15:28.000 --> 15:30.000
時間に伴う?

15:30.000 --> 15:32.000
そうですね。残り何分とか。

15:32.000 --> 15:34.000
そういう実装があったりとかしたので、

15:34.000 --> 15:38.000
そこはカウント処理が不必要に走るとか。

15:38.000 --> 15:40.000
ちょっと動員ではあるんですけど、

15:40.000 --> 15:43.000
そういう処理が隠れてるみたいなとかは入れたりしましたね。

15:43.000 --> 15:45.000
マイミリビューをチェックしたりしてましたよね?

15:45.000 --> 15:46.000
そうですね。

15:46.000 --> 15:51.000
結構そこら辺とかは過去に参加したリクルートさんのスキダオカソンからちょっと影響を受けたりはしてるんですけど、

15:51.000 --> 15:58.000
意外とビルド設定とかに限らないプロダクトの行動って気づきにくかったりするので、

15:58.000 --> 16:01.000
そこら辺を何も情報がない状態かというと、

16:01.000 --> 16:05.000
自分でまずはちゃんとプロファイルを取ったりする機会にもなるので、

16:05.000 --> 16:07.000
いいかなということで入れてます。

16:07.000 --> 16:11.000
なるほど。プロファイルを見ればわかるようなものですね。

16:11.000 --> 16:14.000
そうですね。明らかに怪しいくらいの頻度で走ってる処理があるので、

16:14.000 --> 16:16.000
そこら辺を見ていくとって感じです。

16:16.000 --> 16:22.000
そういうのって入れるときって誰にもわからないような感じで隠すように入れてるんですか?

16:22.000 --> 16:27.000
多少は隠したいですけど、正直明らかに怪しいので、

16:27.000 --> 16:29.000
見ればわかるかなって感じですね。

16:29.000 --> 16:31.000
なるほど。ありがとうございます。

16:31.000 --> 16:35.000
なかなかアプリケーションを一から我々作っているので、

16:35.000 --> 16:41.000
コード量としてはそんなに多くできないっていうところが制約としてはあるかなと思っていて、

16:41.000 --> 16:48.000
言ってもやっぱり1,2ヶ月とかで2,3人とかで、結構1人とかで作っていたりもするので、

16:48.000 --> 16:53.000
そこら辺で隠す森がそんなにないというか。

16:53.000 --> 16:55.000
森というか林というか。

16:55.000 --> 16:58.000
そうですね。林くらいになっちゃうかなみたいなところではあったりするので、

16:58.000 --> 17:02.000
ちょっとその辺を隠すのは難しいところはありつつ、

17:02.000 --> 17:08.000
ただやっぱり参加者側としても結構学生向けでやるときは2日間とかでやったりするので、

17:08.000 --> 17:11.000
あんまり大きいアプリケーションになってしまうと、

17:11.000 --> 17:16.000
そもそもちょっと競技として難しくなりすぎるっていうところがあったりするのかなと思っていて、

17:16.000 --> 17:22.000
ちょうどパフォーマンス技術を学ぶっていう側面での競技みたいなところと、

17:22.000 --> 17:28.000
実際の競技性みたいなところのうまいことバランスが取れているのかなという気もしたいではしてますね。

17:28.000 --> 17:33.000
そこら辺のコードベースの小ささみたいなのはやっぱり独自で問題作り結構利点だなと思っていて、

17:33.000 --> 17:37.000
取り組んでいるのを見ててもやっぱりライブラリを置き換えるとかってよく出てくるんですけど、

17:37.000 --> 17:41.000
そういうのをコードベースが大きいのでやろうとすると、それだけで終わらなくなってしまうので、

17:41.000 --> 17:47.000
あんまりそこの置き換え作業に時間がかかるのは競技の本質では少なくないので、

17:47.000 --> 17:50.000
そういう意味でもいいのかなとは思っていますね。

17:50.000 --> 17:55.000
結構回答してもらうターゲット層によってもレベルを変えていたりとかもするんですかね、そうすると。

17:55.000 --> 18:02.000
それでいうと、さっきちょっとあったんですけど、わりとネタが借り尽くされてしまうみたいな話にもちょっと移るんですけど、

18:02.000 --> 18:09.000
個人的に3回作る時に思ったのは、ある程度ネタをかぶっててもいいかなと逆に思っていて、

18:09.000 --> 18:12.000
楽しんでもらえているクロートの方々もいっぱいいるんですけど、

18:12.000 --> 18:15.000
その一方でどこから取り組めばいいのかわかんないとか、

18:15.000 --> 18:20.000
普段そんなにフロントやってないけどちょっと面白そうみたいな方も結構大勢いらっしゃると思うんですよね。

18:20.000 --> 18:26.000
そういう時にあまりに手を付けられないような問題をやってしまうと、それはそれでちょっと寂しいかなという感じがして、

18:26.000 --> 18:32.000
その意味で、例えば第1回、第2回でやったこれをまずやればある程度は良くなるとかいう風に、

18:32.000 --> 18:40.000
ある程度入門向けの部分と最後突き詰めるためにはやった方がいい部分みたいなところが両方あるのがいいのかなという風に考えたりはしてました。

18:40.000 --> 18:44.000
難しい問題と簡単な問題を絡めていくような感じなんですね。

18:44.000 --> 18:45.000
そうですね。

18:45.000 --> 18:46.000
なるほど。

18:46.000 --> 18:49.000
それでいうと第2回は難しすぎちゃって。

18:49.000 --> 18:50.000
そうなんですか。

18:50.000 --> 18:57.000
学生向けに出した時にはだいぶ層が分かれてしまって、層が分かれるところではなかったかもしれないですけど、

18:57.000 --> 19:07.000
本当に上位数人がすごい点数を出してて、それ以外の人たちは結構点数が伸び悩んでみたいな感じになってしまって、

19:07.000 --> 19:09.000
それは大きな反省でしたね。

19:09.000 --> 19:13.000
やりたいものを全部詰め込んだらこうなっちゃった。

19:13.000 --> 19:16.000
できるかできないかの違いみたいな。

19:16.000 --> 19:20.000
なのでちょっと分かりにくすぎたかなみたいな。

19:20.000 --> 19:23.000
どこが課題なのかみたいなところとか。

19:23.000 --> 19:27.000
そういったところは徐々に改善されていくなって感じはしますね。

19:27.000 --> 19:28.000
そうですね。

19:28.000 --> 19:34.000
でも逆に第1回で1回ってあると毎回難しさを超えてくるのを若干期待されている部分もあるので、

19:34.000 --> 19:37.000
そこら辺ではちょっと難しいなって思うんですけど。

19:37.000 --> 19:41.000
実際競技を始めてみてその雰囲気とか、

19:41.000 --> 19:46.000
回答者の現場の雰囲気っていうのはどうでしたか?

19:46.000 --> 19:48.000
現場の雰囲気、そうですね。

19:48.000 --> 19:53.000
オンライン開催なんであんまり解いてるところは見れないんですけど、

19:53.000 --> 19:57.000
基本的にフォークして書いてもらうことにしてるんですよね。

19:57.000 --> 20:02.000
フォークするとフォークした先のレポジトリも見れるようになるんで、

20:02.000 --> 20:07.000
そういったレポジトリから見てると結構面白いコミットメッセージ。

20:07.000 --> 20:09.000
どんなのがあったんですか?

20:09.000 --> 20:11.000
どういうのが面白かったかな?

20:11.000 --> 20:16.000
特に面白かったのは社内向けでやってるときとかは

20:16.000 --> 20:20.000
結構みんな半分遊びでやっていたりっていうところもあったりするので、

20:20.000 --> 20:24.000
例えばパフォーマンスシューニングの一つのテクニックで

20:24.000 --> 20:32.000
プリコネクトっていうリンクタグをセットすることで

20:32.000 --> 20:34.000
事前にリソースを呼び込んでおくというか

20:34.000 --> 20:36.000
リソースの接続を先にやっておくことで

20:36.000 --> 20:39.000
その分早くなりますよっていう技術があったりするんですけれども

20:39.000 --> 20:42.000
プリコネクトのタグを追加するときに

20:42.000 --> 20:44.000
プリンセスコネクトみたいな感じの

20:44.000 --> 20:46.000
そういうゲームがありますからね。

20:46.000 --> 20:50.000
弊社プリンセスコネクトというゲームがありますので

20:50.000 --> 20:54.000
プリコネっていう形でコミットメッセージを追加していたりとか

20:54.000 --> 20:56.000
弊社特有の

20:56.000 --> 20:57.000
そうですね。

20:57.000 --> 20:59.000
あとはいきなりSSRやり始める人とかもいて

20:59.000 --> 21:02.000
結構アプローチが面白かったりとかもしますね。

21:02.000 --> 21:07.000
SSRは勇気せぬアプローチの仕方だったんですか?

21:07.000 --> 21:09.000
最後の方にやってもいいかなと思うんですけど

21:09.000 --> 21:11.000
結構最初にそれを突っ込んでくるのは

21:11.000 --> 21:13.000
なかなか勇気があるアプローチの仕方だから

21:13.000 --> 21:16.000
最初からSSRのスピリットをしてくる

21:16.000 --> 21:18.000
そんな人もいたんですね。

21:18.000 --> 21:21.000
パフォーマンスチューニングっていう観点じゃないところから

21:21.000 --> 21:23.000
攻めてくる人も結構いて

21:23.000 --> 21:24.000
どんな観点でしょう?

21:24.000 --> 21:26.000
今まで全部リアクトですよね。

21:26.000 --> 21:27.000
そうですね。

21:27.000 --> 21:28.000
リアクトやってるんですけど

21:28.000 --> 21:31.000
リアクトのフレームワーク自体も変えるみたいな

21:31.000 --> 21:32.000
行動変える

21:32.000 --> 21:34.000
冒険出る人もいたんですけど

21:34.000 --> 21:38.000
だいたいそれは間に合わなくて失敗するんですけど

21:38.000 --> 21:42.000
一から同じアプリケーションをスクラッチで開発しているみたいな感じになりますね。

21:42.000 --> 21:44.000
リプレイスするみたいな

21:44.000 --> 21:48.000
問題を壊してきてますね。

21:48.000 --> 21:50.000
他には何かありましたか?

21:50.000 --> 21:54.000
回答見てて面白かったものはなんだろうな

21:54.000 --> 21:58.000
プッシュ、プッシュ、プッシュみたいなコメントとかもありましたか?

21:58.000 --> 21:59.000
フィックス、フィックスみたいな

21:59.000 --> 22:02.000
フィックス、フィックスみたいのは割とありますけど

22:02.000 --> 22:04.000
競技っちゃ競技なので

22:04.000 --> 22:07.000
その辺はそういうものかなという感じではあります。

22:07.000 --> 22:09.000
特典としては見てないということですね。

22:09.000 --> 22:10.000
そうですね。

22:10.000 --> 22:13.000
さっきフォークスしたのが見られるという話ありましたけれども

22:13.000 --> 22:18.000
そこで結構運営者側としても競技時間中に楽しんでいるというか

22:18.000 --> 22:21.000
運営している側って基本やっぱり競技形式なので

22:21.000 --> 22:24.000
あんまりサポート的なことをしたりとか

22:24.000 --> 22:27.000
質問に答えたりみたいなのはそんなに発生はしないので

22:27.000 --> 22:29.000
基本ずっと待機しているというか

22:29.000 --> 22:32.000
眺めているみたいな形にはなるんですけれども

22:32.000 --> 22:36.000
そこでフォークスした先のレポジトリとかを見ていると

22:36.000 --> 22:38.000
この辺できてるねとか

22:38.000 --> 22:42.000
あるいはそういう面白いコミットメッセージが見られたりとか

22:42.000 --> 22:46.000
すごい複雑なことをしようとしているなみたいな話だったりとか

22:46.000 --> 22:49.000
何が面白いかってみんなの開放が見れるんですよね。

22:49.000 --> 22:54.000
僕らってある程度こうやるとパフォーマンス良くなるかなというところは

22:54.000 --> 22:56.000
考えてはいるんですけど

22:56.000 --> 22:59.000
めちゃくちゃチューニングするというところまでは

22:59.000 --> 23:01.000
考えきれていないところがあって

23:01.000 --> 23:06.000
点数高い人のやつとか見ると自分自身が勉強になるんですよね。

23:06.000 --> 23:09.000
これでこう速くなるのねみたいな

23:09.000 --> 23:13.000
そういった発見があるのはすごく良かったですね。

23:13.000 --> 23:15.000
なるほど、もう本当にできる人も来るから

23:15.000 --> 23:19.000
その人たちのアプローチが新しい自分の技術として取り入れられる

23:19.000 --> 23:21.000
みたいな感じ、学びがすごいあるんですね。

23:21.000 --> 23:26.000
一般開催すると結構それこそ今回満点狙いに行く人がいるんですけど

23:26.000 --> 23:29.000
そもそも出題者が開催する時点では

23:29.000 --> 23:32.000
満点まで攻めきれてないっていうことも結構あるので

23:32.000 --> 23:35.000
そういう時に満点とか出てる人を見ると

23:35.000 --> 23:37.000
逆に参考になってたりはしますね。

23:37.000 --> 23:42.000
いいですね、その満点のデポジトリとかって一般公開はされてるんですか?

23:42.000 --> 23:44.000
その人が公開してればって感じですね。

23:44.000 --> 23:47.000
僕らの書いたボールではなくなってるんで。

23:47.000 --> 23:49.000
そうなんですよね、結局我々って

23:49.000 --> 23:52.000
例えばその満点の状態のアプリケーションをまず作って

23:52.000 --> 23:56.000
そこからデチューニングしていくっていうような形で作っていないので

23:56.000 --> 23:59.000
最初からある程度遅いアプリケーションとして作って

23:59.000 --> 24:03.000
さらにデチューニングして遅くしていこうみたいな感じで作ったりはしているので

24:03.000 --> 24:07.000
一体どうやったら満点が取れるのかというのは我々わかってないんですよ。

24:07.000 --> 24:09.000
なるほど、確かに。

24:09.000 --> 24:12.000
なのでそもそもその満点を取るのが可能なのかどうかみたいのも

24:12.000 --> 24:15.000
正直なところそこまで事前にやり込んで

24:15.000 --> 24:19.000
これが模範回答ですみたいなところまで作り込めてればいいんですけれども

24:19.000 --> 24:22.000
どうしてもちょっとそこまでできていないっていうところはあって

24:22.000 --> 24:25.000
ある程度の点数までいくにはどうしたらいいみたいなところとかまでは

24:25.000 --> 24:28.000
もちろん検証とかはしてたりするんですけれども

24:28.000 --> 24:31.000
そこはやはり最後の0.1点とかまで

24:31.000 --> 24:34.000
詰められるのかみたいなところはわからないところがあって

24:34.000 --> 24:37.000
それをむしろ一般開催の時に

24:37.000 --> 24:41.000
一般開催は結構期間が長いというところもありますけれども

24:41.000 --> 24:43.000
そこを本当に非常にやり込んでいただいて

24:43.000 --> 24:47.000
満点狙っていくというところまでできてきているっていうのは

24:47.000 --> 24:49.000
本当に出題者妙に尽きるというか

24:49.000 --> 24:53.000
そこまでやり込んでいただいて本当にありがたいなという感じがしますね。

24:53.000 --> 24:57.000
確かに嬉しいですね、それは出題者カーカラーとしても。

24:57.000 --> 25:01.000
実際に開催しながらで苦労したところとかってありますか?

25:01.000 --> 25:04.000
点数の採点のところとかで。

25:04.000 --> 25:06.000
採点はそうですね。

25:06.000 --> 25:11.000
一番最初の頃ってあれは採点システムだけはあったんでしょうか?

25:11.000 --> 25:15.000
一番最初の時はサークルCIを使って

25:15.000 --> 25:18.000
その中でライトハウスを動かすみたいな形になっていて

25:18.000 --> 25:23.000
その結果を別途立てているリーダーボード用のサーバーみたいなのがあって

25:23.000 --> 25:27.000
そこにスコアを送信してリーダーボードを表示するみたいな

25:27.000 --> 25:32.000
そういうちょっと簡単な仕組みがあったっていう感じですね。

25:32.000 --> 25:36.000
一定時間置きに計測されるから自分の好きなタイミングで計測できない?

25:36.000 --> 25:37.000
そうですね。

25:37.000 --> 25:43.000
第2回の社内向け開催まではそのような形で

25:43.000 --> 25:46.000
基本的に30分に1回とか1時間に1回とかで

25:46.000 --> 25:51.000
一斉に参加者のスコアを計算して更新するという形で

25:51.000 --> 25:55.000
そのスコアを計算して更新するみたいな感じの仕組みになってましたね。

25:55.000 --> 25:57.000
そうなんですね。

25:57.000 --> 25:59.000
第3回目では違う仕組み?

25:59.000 --> 26:04.000
そうですね。第2回の一般開催、そこから一般開催を始めたんですけれども

26:04.000 --> 26:06.000
そのタイミングで新しい仕組みを作ったという

26:06.000 --> 26:09.000
宮城くんが新しい仕組みを作ったという感じでした。

26:09.000 --> 26:11.000
それはどんな仕組みだったんですか?

26:11.000 --> 26:14.000
GitHub Actionsを使っていて

26:14.000 --> 26:19.000
Issueを立ててそこに回してほしいみたいな感じのコメントをすると

26:19.000 --> 26:21.000
デペンダーボットとかリノベートとか

26:21.000 --> 26:25.000
ああいうボット系のGitHubのやつあると思うんですけど

26:25.000 --> 26:28.000
ああいう感じでボットに対してリクエストを飛ばすと

26:28.000 --> 26:31.000
GitHub Actions上で計測が回って

26:31.000 --> 26:33.000
スコアが出てみたいな感じで

26:33.000 --> 26:38.000
一通りそこら辺を全部GitHub Actionsに寄せたんですよね。

26:38.000 --> 26:43.000
リーダーボードもGitHubのReadMeで更新されるようになって

26:43.000 --> 26:45.000
それで一番大きかったのは

26:45.000 --> 26:47.000
あれですね、お金が浮いたっていうか

26:47.000 --> 26:49.000
そうだったんですね。

26:49.000 --> 26:53.000
GitHub Actionsってオープンソースというか

26:53.000 --> 26:56.000
公開しているプレッシャーに対しては無料で使えて

26:56.000 --> 26:59.000
一般公開っていうのを決めた時も

26:59.000 --> 27:02.000
だいぶ長い期間やりたいねっていう話で

27:02.000 --> 27:04.000
1ヶ月くらいだったんですけど

27:04.000 --> 27:07.000
1ヶ月間好き放題、CI回し放題で

27:07.000 --> 27:10.000
壊しておくわけにはいかないみたいなところがあって

27:10.000 --> 27:12.000
そういったところはすごく助かりましたね。

27:12.000 --> 27:15.000
GitHub Actions無料で使えてみたいなところは

27:15.000 --> 27:17.000
確かになかなかないですもんね。

27:17.000 --> 27:18.000
そうなんですよね。

27:18.000 --> 27:21.000
CIなんか無限にオープンソースとして

27:21.000 --> 27:23.000
開発している環境に対して無料で

27:23.000 --> 27:25.000
CI提供しますっていうのは結構あるんですけど

27:25.000 --> 27:29.000
オープンソースって言えるかどうかは怪しいですよね。

27:29.000 --> 27:30.000
確かに。

27:30.000 --> 27:34.000
実際にそのレポジトリってまだ公開されていますか?

27:34.000 --> 27:36.000
そうですね。公開はしてますね。

27:36.000 --> 27:39.000
リーダーボードっていう形でレポジトリ公開していて

27:39.000 --> 27:41.000
もう期間過ぎちゃってるんで

27:41.000 --> 27:43.000
実際にそれで動くわけじゃないんですけど

27:43.000 --> 27:45.000
フォークしてもらって加工してもらうと

27:45.000 --> 27:47.000
自分でも動かせるんで

27:47.000 --> 27:49.000
結構使ってくださっている方もいて

27:49.000 --> 27:50.000
そうなんですね。

27:50.000 --> 27:53.000
それを使って査者さんが会社でやりましたみたいな

27:53.000 --> 27:55.000
記事もあげてくださってしてたんで

27:55.000 --> 27:57.000
いろいろ公開していくと

27:57.000 --> 28:00.000
そうやって広がっていくのがいいですね。

28:00.000 --> 28:01.000
嬉しいですね、それは。

28:01.000 --> 28:04.000
他の会社でも使っていただけると。

28:04.000 --> 28:05.000
そうですね。

28:05.000 --> 28:07.000
最初公開されて

28:07.000 --> 28:09.000
これで本当に誰も見られなかったら

28:09.000 --> 28:11.000
めちゃくちゃ悲しいなって思うんですけど

28:11.000 --> 28:13.000
結構遊んでもらってますね。

28:13.000 --> 28:15.000
そこはすごく嬉しいです。

28:15.000 --> 28:18.000
最初のリーダーボードだと30分に1点で

28:18.000 --> 28:21.000
しかも運営がサポートする時間ないしか回らなかったんで

28:21.000 --> 28:24.000
例えば夜6時とか7時とか

28:24.000 --> 28:26.000
ある程度のタイミングで測定が止まって

28:26.000 --> 28:29.000
次の日の朝まで分かんないみたいな感じだったんですけど

28:29.000 --> 28:31.000
GitHub Actionsの仕組みに移行してからは

28:31.000 --> 28:33.000
好きなタイミングで回せてしまうので

28:33.000 --> 28:36.000
よくも悪くもみんな回し続けるんで

28:36.000 --> 28:38.000
運営がサポート離れた後も

28:38.000 --> 28:40.000
ひたすらに一晩中回っていて

28:40.000 --> 28:42.000
ちょっと恐怖を覚えましたね。

28:42.000 --> 28:45.000
終わってからもみんな回し続けていたんですね。

28:45.000 --> 28:48.000
やってる人たちはずっと改善して回してみたいなのをやってて

28:48.000 --> 28:50.000
その辺の作業時間がある意味

28:50.000 --> 28:53.000
可視化されるようになったっていうところがありますよね。

28:53.000 --> 28:56.000
以前は夜が明けて翌日になって最初に回してみると

28:56.000 --> 28:59.000
ものすごい点数上がってる人がいるみたいな

28:59.000 --> 29:01.000
そういう感じだったんですけど

29:01.000 --> 29:03.000
今は本当にこまめに回すことができるので

29:03.000 --> 29:07.000
結構リアルタイムがスコアで。

29:07.000 --> 29:11.000
そこの採点あたりの大変なところっていう話で言うと

29:11.000 --> 29:13.000
もう一つあって

29:13.000 --> 29:17.000
レギュレーションチェックをやっているっていうところなんですけれども

29:17.000 --> 29:20.000
採点というかライトハウスだと

29:20.000 --> 29:22.000
実際に動いているかどうかっていうのは

29:22.000 --> 29:24.000
それだけだとわからないので

29:24.000 --> 29:26.000
パフォーマンスチューニングしたけれども

29:26.000 --> 29:28.000
アプリケーションが壊れてしまいましたっていう形になってしまうと

29:28.000 --> 29:31.000
それはそれでチューニングの範囲を超えているというか

29:31.000 --> 29:34.000
機能を落とせば速くなるのはそれは当然なので

29:34.000 --> 29:37.000
そこをしっかり機能を保った上でチューニングできているのかな

29:37.000 --> 29:39.000
っていうところをチェックするんですけれども

29:39.000 --> 29:43.000
そこはやはりどうしても自動化が難しいところではあって

29:43.000 --> 29:46.000
それこそE2Eテストみたいな形で

29:46.000 --> 29:49.000
自動化するっていう方法もなくはないかもしれないんですけれども

29:49.000 --> 29:52.000
ただその自動化E2Eテストを作るにしても

29:52.000 --> 29:55.000
例えば要素を特定して

29:55.000 --> 29:58.000
そこの要素をクリックしてとか表示されているとか

29:58.000 --> 30:00.000
そういうチェックをしないといけないんですが

30:00.000 --> 30:03.000
そこすらもパフォーマンスチューニングで変わる可能性があるというか

30:03.000 --> 30:06.000
要素の数を減らしたりとか

30:06.000 --> 30:09.000
あるいはクラス名を変えたりとか

30:09.000 --> 30:12.000
そういったところは派生する可能性は十分にあるので

30:12.000 --> 30:15.000
そこに対してそれすらも耐えうるような

30:15.000 --> 30:18.000
E2Eテストを作るというのがどうしても難しいので

30:18.000 --> 30:21.000
今はそれを全部手動でというか

30:21.000 --> 30:24.000
人力でチェックをしているというところがありまして

30:24.000 --> 30:28.000
競技が終了したタイミングで採点が終わるんですけれども

30:28.000 --> 30:32.000
その後に採点したスコアの上位の人から

30:32.000 --> 30:35.000
一個ずつ人力でチェック表みたいな

30:35.000 --> 30:38.000
テスト項目書みたいなのが存在していて

30:38.000 --> 30:41.000
それを一個ずつ人力で見て

30:41.000 --> 30:44.000
ここは大丈夫とかこれはダメだったみたいなところで

30:44.000 --> 30:47.000
レギュレーションチェックという感じでやっているんですが

30:47.000 --> 30:51.000
なかなかレギュレーションチェックを通りにくいというか

30:51.000 --> 30:55.000
チューニングしていく中で壊れてしまうというところも

30:55.000 --> 30:57.000
割とあったりはするので

30:57.000 --> 31:00.000
その辺が上位3つだけチェックすればいいのかというと

31:00.000 --> 31:03.000
実はそういうわけではなかったりするパターンが結構多くて

31:03.000 --> 31:08.000
レギュレーションチェックがすごい時間かかっちゃうというところはあるなというところと

31:08.000 --> 31:12.000
最初の上位の人とかはすごく点数高かったりするので

31:12.000 --> 31:14.000
その分すごい高速なアプリケーションになっていて

31:14.000 --> 31:16.000
サクサクチェックできるんですけれども

31:16.000 --> 31:19.000
だんだん下の順位までチェックしないといけないとなってくると

31:19.000 --> 31:22.000
チューニングがそこまで進んでいなかったりするので

31:22.000 --> 31:24.000
元のすごく重いアプリケーションを

31:24.000 --> 31:28.000
平飾るを得ないような形になってきたりして

31:28.000 --> 31:31.000
そこの中でレギュレーションチェックするというのが

31:31.000 --> 31:35.000
なかなか難しかったりというところもあったりしますね

31:35.000 --> 31:36.000
そうですね

31:36.000 --> 31:38.000
あと第2回からあったものでいうと

31:38.000 --> 31:42.000
ログイン機能があって一応軽く認証みたいなのがあったんですね

31:42.000 --> 31:45.000
第3回も軽い気持ちでちょっと軽く入れとくかと思って入れたんですけど

31:45.000 --> 31:47.000
意外とそれが罠になったみたいで

31:47.000 --> 31:50.000
社員向けだとさすがにあんまりなかったんですけど

31:50.000 --> 31:53.000
学生向けだと結構最後に早くするために

31:53.000 --> 31:55.000
CDNにキャッシュさせようと思って

31:55.000 --> 31:57.000
雑に全部キャッシュにつけたら

31:57.000 --> 32:00.000
認証周りに置くやつもキャッシュがついてしまって

32:00.000 --> 32:03.000
ちゃんと機能しなくなってしまったとかも意外とあったりして

32:03.000 --> 32:06.000
意外とそこら辺の罠みたいなのがあったな

32:06.000 --> 32:08.000
というのはちょっと思ったりしましたね

32:08.000 --> 32:11.000
最初に初回アクセスのはずなのにログインできてるみたいな

32:11.000 --> 32:12.000
そうですね

32:12.000 --> 32:15.000
実際のプロダクトでやったらインシデントみたいな感じですけど

32:15.000 --> 32:17.000
なかなか聞いてる方たち

32:17.000 --> 32:20.000
実際に怒り得そうなことでもありそうですけど

32:20.000 --> 32:22.000
正しく使うのはすごい重要なので

32:22.000 --> 32:27.000
いい量いいんじゃないかなとは思ってますね

32:29.000 --> 32:32.000
ちなみに第4回は考えていらっしゃるんですか?

32:32.000 --> 32:33.000
そうですね

32:33.000 --> 32:36.000
第4回2013ということで

32:36.000 --> 32:39.000
開催を今まさに準備を進めているところで

32:39.000 --> 32:44.000
年明けの3月4日と5日の第1週目ですかね

32:44.000 --> 32:48.000
第1週目の土日に開催しようかなと思って準備しています

32:48.000 --> 32:51.000
どんなことを今やろうとしてるんですかね

32:51.000 --> 32:54.000
言える範囲で全然変わらないんですけども

32:54.000 --> 32:56.000
どんなことをそうですね

32:56.000 --> 32:59.000
ドラくんは参加者として出たいみたいなので

32:59.000 --> 33:01.000
あんまり大きなネタバレができないですけど

33:01.000 --> 33:02.000
大丈夫ですよ

33:02.000 --> 33:05.000
ここに今聞いてる皆さんも参加者として参加できるので

33:05.000 --> 33:08.000
同じ条件ですね

33:08.000 --> 33:11.000
今回は一番大きく変わるのがあれですよね

33:11.000 --> 33:15.000
学生向けでやってたのと一般向けにやってたのを

33:15.000 --> 33:18.000
統合して一緒のタイミングでやろうという話を

33:18.000 --> 33:20.000
今している最中なので

33:20.000 --> 33:24.000
一般の方は1ヶ月期間が結構長めにやってたんで

33:24.000 --> 33:27.000
長い期間でコツコツやってらっしゃる方も

33:27.000 --> 33:29.000
多かったかなっていう気がするんですけど

33:29.000 --> 33:32.000
2日間は難しいですよ

33:32.000 --> 33:35.000
確かに

33:35.000 --> 33:38.000
というところと新しく試みとしてやってみたいな

33:38.000 --> 33:39.000
と思っているのは

33:39.000 --> 33:42.000
Lighthouseのスコアだけだとどうしても

33:42.000 --> 33:44.000
チューニングするポイントみたいなのが

33:44.000 --> 33:48.000
最初のランディング時のパフォーマンスだけになっちゃう

33:48.000 --> 33:49.000
っていう問題はあって

33:49.000 --> 33:51.000
ウェブのパフォーマンスって

33:51.000 --> 33:53.000
ランディングだけじゃないはずなんですよね

33:53.000 --> 33:55.000
その後使っていくところに対しての

33:55.000 --> 33:58.000
ユーザビリティ向上みたいなところもあると思うので

33:58.000 --> 34:01.000
実際使ってみてのスコアが

34:01.000 --> 34:03.000
何かしらの方向で取れないかなみたいなのは

34:03.000 --> 34:05.000
今検討しているところですね

34:05.000 --> 34:07.000
そうなんですね

34:07.000 --> 34:11.000
他にもこういったことを学びたいっていう人がいたら

34:11.000 --> 34:14.000
ぜひ参加してくださいみたいなところってありますか?

34:14.000 --> 34:16.000
そうですね

34:16.000 --> 34:20.000
まだそんなに決まってないんですよね

34:20.000 --> 34:25.000
まだそんなにできてないっていうところはあるんですけれども

34:25.000 --> 34:29.000
今回も第2回第3回と同じように

34:29.000 --> 34:31.000
やっぱり基本的なところというか

34:31.000 --> 34:33.000
これはパフォーマンスチューニングとして応答だよね

34:33.000 --> 34:37.000
みたいなところももちろん組み込んでいこうかなとは思っているので

34:37.000 --> 34:38.000
そういったパフォーマンスチューニングを

34:38.000 --> 34:40.000
これから学びたいであるとか

34:40.000 --> 34:41.000
ちょっと興味があるんだけれども

34:41.000 --> 34:44.000
どういうところの知識をつけていけばいいのか

34:44.000 --> 34:45.000
わからないよみたいな

34:45.000 --> 34:48.000
そういうような方でも十分楽しめるような形の

34:48.000 --> 34:51.000
素材にまた今回もしていければなと思っているので

34:51.000 --> 34:54.000
そういった方にもぜひ挑戦していただきたいなと思いますし

34:54.000 --> 34:58.000
2日間の限定された時間でやっていくというところと

34:58.000 --> 35:01.000
先ほどの新しい計測の仕組みというか

35:01.000 --> 35:04.000
新しい計測の方法でもやっていくという

35:04.000 --> 35:07.000
そういう新要素ももちろん入れていこうと思っているので

35:07.000 --> 35:09.000
これまで楽しんでいただいた方にも

35:09.000 --> 35:13.000
ぜひまたしても挑戦していただければなと思っています

35:13.000 --> 35:15.000
ありがとうございます

35:15.000 --> 35:18.000
ぜひいろんな方に参加していただきたいですね

35:18.000 --> 35:21.000
次回は僕もできれば出たいなと思っているので

35:21.000 --> 35:23.000
ぜひぜひ出てください

35:29.000 --> 35:32.000
というわけで本日も時間になったんですけれども

35:32.000 --> 35:37.000
今日改めて振り返ってみての感想とかってどうでしたか

35:37.000 --> 35:39.000
そうですね

35:39.000 --> 35:43.000
ウェブスピードハッカソンはもともと自分のエゴみたいな形で

35:43.000 --> 35:46.000
やりたいと思ったので始めたみたいなところではあるんですけれども

35:46.000 --> 35:50.000
そこを運営というか出題を引き継いで

35:50.000 --> 35:55.000
宮城くんとドラくんと引き継いでくれたというところもありますし

35:55.000 --> 35:58.000
いろんな業界的にも結構ウェブスピードハッカソンを

35:58.000 --> 36:01.000
楽しんで参加していただいている方であったりとか

36:01.000 --> 36:03.000
それを社内のイベントとして

36:03.000 --> 36:06.000
開催していただいているような会社さんであったりとか

36:06.000 --> 36:10.000
そういう業界的な広がりも結構生まれてきているのかなという気がしているので

36:10.000 --> 36:13.000
そういった自分がまいた種みたいなのが

36:13.000 --> 36:16.000
広がってきているっていうのはすごい嬉しいなと思いますし

36:16.000 --> 36:20.000
これからも継続的にやっていければなというふうに思っています

36:20.000 --> 36:21.000
なるほど

36:21.000 --> 36:23.000
竹内さんはどうでしたか

36:23.000 --> 36:24.000
そうですね

36:24.000 --> 36:28.000
結構最初は作文側になるっていうのは緊張もあったんですけれども

36:28.000 --> 36:32.000
やっぱりいろんな方に解いていただけているのはすごい嬉しいなと思うし

36:32.000 --> 36:35.000
やっぱり解いていただく方がたくさんいてこそのスピードハッカソンだと思うので

36:35.000 --> 36:38.000
改めてそこに感謝しつつ

36:38.000 --> 36:42.000
次回の開催は自分も今度はまた参加側として参加しようと思うので

36:42.000 --> 36:44.000
楽しみにしていたいと思います

36:44.000 --> 36:47.000
ぜひまたチャンピオンを取っていただいて

36:47.000 --> 36:50.000
次の人代でしょうか

36:50.000 --> 36:52.000
宮城さんどうでしたか

36:52.000 --> 36:53.000
そうですね

36:53.000 --> 36:58.000
ウェブスピードハッカソンって僕個人の思いとしては

36:58.000 --> 37:02.000
パフォーマンスチューニングだけじゃないところが大きいかなと思っていて

37:02.000 --> 37:06.000
一つのアプリケーションを提供しているようなんですよね

37:06.000 --> 37:09.000
そういったところがアプリケーションを作る上での

37:09.000 --> 37:11.000
勉強にすごくなるとは思っていて

37:11.000 --> 37:14.000
例えば初学者の人がまず最初にやるのは

37:14.000 --> 37:17.000
トゥートアプリとかだったりすると思うんですけれども

37:17.000 --> 37:20.000
もっと発展的なものを作りたいっていうときに

37:20.000 --> 37:23.000
参考になるものはあんまり世の中ない気がするんですよね

37:23.000 --> 37:27.000
僕らも結構真剣にアプリケーションを作っていますので

37:27.000 --> 37:30.000
ある程度皆さんにもお見せする前提で作っているので

37:30.000 --> 37:34.000
そこから学び取れるところは結構あるとは思っていて

37:34.000 --> 37:37.000
僕自身も学べるし皆さんも学べるしっていうところで

37:37.000 --> 37:42.000
お互いウェブの業界を良くしていけたらなというふうには思っています

37:42.000 --> 37:43.000
ありがとうございます

37:43.000 --> 37:48.000
今日実際話してお聞きしてなかなか以前から気になっていたんですけれども

37:48.000 --> 37:51.000
裏話とかも本当にたくさん聞けて

37:51.000 --> 37:53.000
これからどうなっていくかっていう話も聞けて

37:53.000 --> 37:55.000
本当にいい回になりました

37:55.000 --> 37:59.000
また今後もウェブスピードハッカソンをどんどん続けてもらって

37:59.000 --> 38:05.000
CA全体の大きなイベントとして大きくなっていければなと思っています

38:05.000 --> 38:10.000
本日は本当に皆さんお忙しい中参加していただいてありがとうございます

38:10.000 --> 38:12.000
本当に楽しかったです

38:12.000 --> 38:16.000
今回もマディウェブポッドキャスト収録を終わりにいたします

38:16.000 --> 38:18.000
皆さん本当にありがとうございました

38:18.000 --> 38:19.000
ありがとうございました

38:19.000 --> 38:30.000
バイバイ

